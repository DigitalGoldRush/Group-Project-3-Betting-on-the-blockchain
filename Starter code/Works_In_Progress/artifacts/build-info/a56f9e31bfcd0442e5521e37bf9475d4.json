{
	"id": "a56f9e31bfcd0442e5521e37bf9475d4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"Project-3/Starter code/Works_In_Progress/test_game.sol": {
				"content": "pragma solidity ^0.5.1;\n\ncontract CoinFlip {\n\n    uint constant public BET_MIN        = 1 wei;    // The minimum bet\n    uint constant public BET_MAX        = 10 ether;\n    uint public initialBet;                            // Bet of first player\n    uint public outcome;\n    uint public randomNum;\n    uint public housePlayed = 0;\n    uint public playerPlayed = 0;\n    uint public playerChoice = 0;\n    uint public paid         = 0;\n\n\n    // Players' addresses\n    address payable playerA;\n    address payable HouseWallet; // = 0x10b21F7DC7d6BDB16660D827442c7edb3d2523eA; //\n\n\n    \n\n    /**************************************************************************/\n    /*************************** Player Registration **************************/\n    /**************************************************************************/\n\n\n    modifier validBet() {\n        require(msg.value >= BET_MIN);\n        require(msg.value <= BET_MAX);\n        require(initialBet == 0 || msg.value >= initialBet);\n        _;\n    }\n\n    modifier notAlreadyRegistered() {\n        require(msg.sender != playerA);\n        \n        _;\n    }\n\n\n    function register() public payable validBet notAlreadyRegistered {\n        \n        if (HouseWallet == address(0x0)) {\n            HouseWallet = msg.sender;\n            housePlayed = 1;\n\n        }\n\n        else if ( playerA == address(0x0) && HouseWallet != address(0x0) ) {\n            playerA    = msg.sender;\n            initialBet = msg.value;\n            playerPlayed = 1;\n      \n        }\n\n        \n        \n    }\n\n    /**************************************************************************/\n    /****************************** RESULT PHASE ******************************/\n    /**************************************************************************/\n    \n    \n    modifier is_caller_player() {\n        \n        require(msg.sender == playerA);\n        _;\n    }\n\n    modifier is_legal_play(uint choice) {\n        \n        require(choice > 0);\n        require(choice < 3);\n        _;\n    }\n\n        modifier player_never_played {\n        \n        require(playerChoice < 1);\n        _;\n    }\n\n    function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {\n\n        playerChoice = choice;\n\n    }\n\n    modifier has_player_played {\n        \n        require(playerChoice > 0);\n        _;\n    }\n\n    function getOutcome() public has_player_played returns (uint) {\n    \n        \n        randomNum = uint(blockhash(block.number-1)) % 999999;\n        \n\n        if (randomNum % 2 == 0) {\n            \n            outcome = 2;\n            if (playerChoice == 2) {\n\n                paid = 1;            \n                playerA.transfer(address(this).balance);\n                reset();\n            \n            }\n\n        }\n\n        if (randomNum % 2 == 1) {\n\n            outcome = 1;\n            if (playerChoice == 1) {\n\n                paid = 1;\n                //reset();  // Reset game before paying to avoid reentrancy attacks\n                playerA.transfer(address(this).balance);\n                reset();\n            \n            }\n\n        }\n            \n        if (paid == 0) {\n\n            \n            //reset();  // Reset game before paying to avoid reentrancy attacks\n            HouseWallet.transfer(address(this).balance);\n            reset();\n           \n\n        }\n        \n    }\n    \n    // Reset the game.\n\n    function reset() private {\n        \n        initialBet      = 0;\n        playerA         = address(0x0);\n        HouseWallet     = address(0x0);\n        housePlayed     = 0;\n        playerPlayed    = 0;\n        playerChoice    = 0;\n       \n    }\n\n\n\n    /**************************************************************************/\n    /**************************** HELPER FUNCTIONS ****************************/\n    /**************************************************************************/\n\n    // Return contract balance\n    function getContractBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n\n    // Return player's ID\n    function whoAmI() public view returns (uint) {\n        if (msg.sender == playerA) {\n            return 1;\n        } if (msg.sender == HouseWallet) {\n            return 0;\n        }\n    }\n\n\n    modifier game_has_outcome() {\n        require(outcome > 0);\n        _;\n    }\n\n    function reset_contract() public game_has_outcome {\n\n        initialBet      = 0;\n        playerA         = address(0x0);\n        HouseWallet     = address(0x0);\n        outcome         = 0;\n        paid            = 0;\n\n\n    }\n}\n\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Project-3/Starter code/Works_In_Progress/test_game.sol": {
				"CoinFlip": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "BET_MAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "BET_MIN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getOutcome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "housePlayed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "initialBet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "outcome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "playerChoice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "choice",
									"type": "uint256"
								}
							],
							"name": "playerChooses",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "playerPlayed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "randomNum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "register",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "reset_contract",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "whoAmI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":25:4566  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":329:330  0 */\n  0x00\n    /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":303:330  uint public housePlayed = 0 */\n  0x03\n  sstore\n    /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":363:364  0 */\n  0x00\n    /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":336:364  uint public playerPlayed = 0 */\n  0x04\n  sstore\n    /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":397:398  0 */\n  0x00\n    /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":370:398  uint public playerChoice = 0 */\n  0x05\n  sstore\n    /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":431:432  0 */\n  0x00\n    /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":404:432  uint public paid         = 0 */\n  0x06\n  sstore\n    /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":25:4566  contract CoinFlip {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":25:4566  contract CoinFlip {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":25:4566  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e7e4b47\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xda91254c\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xda91254c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe92788d6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf630aa65\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfc98f42e\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x7e7e4b47\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8e687aed\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xadef7cdd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd0017a0c\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x27793f87\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x27793f87\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x295b4e17\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4e22fb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6f9fb98a\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x1aa3a008\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1d73c64c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2626ab08\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1122:1541  function register() public payable validBet notAlreadyRegistered {... */\n    tag_2:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":173:195  uint public initialBet */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":173:195  uint public initialBet */\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":50:93  uint constant public BET_MIN        = 1 wei */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":50:93  uint constant public BET_MIN        = 1 wei */\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":251:270  uint public outcome */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":251:270  uint public outcome */\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":404:432  uint public paid         = 0 */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":404:432  uint public paid         = 0 */\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4337:4564  function reset_contract() public game_has_outcome {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4337:4564  function reset_contract() public game_has_outcome {... */\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3928:4030  function getContractBalance() public view returns (uint) {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3928:4030  function getContractBalance() public view returns (uint) {... */\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2372:3366  function getOutcome() public has_player_played returns (uint) {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2372:3366  function getOutcome() public has_player_played returns (uint) {... */\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":336:364  uint public playerPlayed = 0 */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":336:364  uint public playerPlayed = 0 */\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":370:398  uint public playerChoice = 0 */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":370:398  uint public playerChoice = 0 */\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":121:167  uint constant public BET_MAX        = 10 ether */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":121:167  uint constant public BET_MAX        = 10 ether */\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4062:4248  function whoAmI() public view returns (uint) {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4062:4248  function whoAmI() public view returns (uint) {... */\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2129:2271  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2129:2271  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2129:2271  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":276:297  uint public randomNum */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_59:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":276:297  uint public randomNum */\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":303:330  uint public housePlayed = 0 */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_62:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":303:330  uint public housePlayed = 0 */\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1122:1541  function register() public payable validBet notAlreadyRegistered {... */\n    tag_21:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":88:93  1 wei */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":871:880  msg.value */\n      callvalue\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":871:891  msg.value >= BET_MIN */\n      lt\n      iszero\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":863:892  require(msg.value >= BET_MIN) */\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":159:167  10 ether */\n      0x8ac7230489e80000\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":910:919  msg.value */\n      callvalue\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":910:930  msg.value <= BET_MAX */\n      gt\n      iszero\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":902:931  require(msg.value <= BET_MAX) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":963:964  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":949:959  initialBet */\n      dup1\n      sload\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":949:964  initialBet == 0 */\n      eq\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":949:991  initialBet == 0 || msg.value >= initialBet */\n      dup1\n      tag_68\n      jumpi\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":981:991  initialBet */\n      sload(0x00)\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":968:977  msg.value */\n      callvalue\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":968:991  msg.value >= initialBet */\n      lt\n      iszero\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":949:991  initialBet == 0 || msg.value >= initialBet */\n    tag_68:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":941:992  require(initialBet == 0 || msg.value >= initialBet) */\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1080:1087  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1066:1087  msg.sender != playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1066:1076  msg.sender */\n      caller\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1066:1087  msg.sender != playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1058:1088  require(msg.sender != playerA) */\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1233:1236  0x0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1210:1237  HouseWallet == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1210:1221  HouseWallet */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1210:1237  HouseWallet == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1206:1516  if (HouseWallet == address(0x0)) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1267:1277  msg.sender */\n      caller\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1253:1264  HouseWallet */\n      0x08\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1253:1277  HouseWallet = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1305:1306  1 */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1291:1302  housePlayed */\n      0x03\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1291:1306  housePlayed = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1206:1516  if (HouseWallet == address(0x0)) {... */\n      jump(tag_74)\n    tag_73:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1357:1360  0x0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1338:1361  playerA == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1338:1345  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1338:1361  playerA == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1338:1392  playerA == address(0x0) && HouseWallet != address(0x0) */\n      dup1\n      iszero\n      tag_75\n      jumpi\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1388:1391  0x0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1365:1392  HouseWallet != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1365:1376  HouseWallet */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1365:1392  HouseWallet != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1338:1392  playerA == address(0x0) && HouseWallet != address(0x0) */\n    tag_75:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1333:1516  if ( playerA == address(0x0) && HouseWallet != address(0x0) ) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1422:1432  msg.sender */\n      caller\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1409:1416  playerA */\n      0x07\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1409:1432  playerA    = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1459:1468  msg.value */\n      callvalue\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1446:1456  initialBet */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1446:1468  initialBet = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1497:1498  1 */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1482:1494  playerPlayed */\n      0x04\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1482:1498  playerPlayed = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1333:1516  if ( playerA == address(0x0) && HouseWallet != address(0x0) ) {... */\n    tag_76:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1206:1516  if (HouseWallet == address(0x0)) {... */\n    tag_74:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1122:1541  function register() public payable validBet notAlreadyRegistered {... */\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":173:195  uint public initialBet */\n    tag_24:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":50:93  uint constant public BET_MIN        = 1 wei */\n    tag_27:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":88:93  1 wei */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":50:93  uint constant public BET_MIN        = 1 wei */\n      dup2\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":251:270  uint public outcome */\n    tag_30:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":404:432  uint public paid         = 0 */\n    tag_33:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4337:4564  function reset_contract() public game_has_outcome {... */\n    tag_36:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4311:4312  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4301:4308  outcome */\n      sload(0x01)\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4301:4312  outcome > 0 */\n      gt\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4293:4313  require(outcome > 0) */\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4416:4417  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4398:4408  initialBet */\n      dup1\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4398:4417  initialBet      = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4453:4456  0x0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4427:4434  playerA */\n      0x07\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4427:4457  playerA         = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4493:4496  0x0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4467:4478  HouseWallet */\n      0x08\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4467:4497  HouseWallet     = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4525:4526  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4507:4514  outcome */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4507:4526  outcome         = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4554:4555  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4536:4540  paid */\n      0x06\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4536:4555  paid            = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4337:4564  function reset_contract() public game_has_outcome {... */\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3928:4030  function getContractBalance() public view returns (uint) {... */\n    tag_39:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3979:3983  uint */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4002:4023  address(this).balance */\n      selfbalance\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3995:4023  return address(this).balance */\n      swap1\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3928:4030  function getContractBalance() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2372:3366  function getOutcome() public has_player_played returns (uint) {... */\n    tag_42:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2428:2432  uint */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2346:2347  0 */\n      dup1\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2331:2343  playerChoice */\n      sload(0x05)\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2331:2347  playerChoice > 0 */\n      gt\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2323:2348  require(playerChoice > 0) */\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2504:2510  999999 */\n      0x0f423f\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2498:2499  1 */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2485:2497  block.number */\n      number\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2485:2499  block.number-1 */\n      sub\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2475:2500  blockhash(block.number-1) */\n      blockhash\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2470:2501  uint(blockhash(block.number-1)) */\n      0x00\n      shr\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2470:2510  uint(blockhash(block.number-1)) % 999999 */\n      dup2\n      tag_84\n      jumpi\n      invalid\n    tag_84:\n      mod\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2458:2467  randomNum */\n      0x02\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2458:2510  randomNum = uint(blockhash(block.number-1)) % 999999 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2551:2552  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2546:2547  2 */\n      0x02\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2534:2543  randomNum */\n      dup1\n      sload\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2534:2547  randomNum % 2 */\n      dup2\n      tag_85\n      jumpi\n      invalid\n    tag_85:\n      mod\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2534:2552  randomNum % 2 == 0 */\n      eq\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2530:2789  if (randomNum % 2 == 0) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2591:2592  2 */\n      0x02\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2581:2588  outcome */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2581:2592  outcome = 2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2626:2627  2 */\n      0x02\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2610:2622  playerChoice */\n      sload(0x05)\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2610:2627  playerChoice == 2 */\n      eq\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2606:2778  if (playerChoice == 2) {... */\n      iszero\n      tag_87\n      jumpi\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2655:2656  1 */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2648:2652  paid */\n      0x06\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2648:2656  paid = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2686:2693  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2686:2702  playerA.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2686:2725  playerA.transfer(address(this).balance) */\n      0x08fc\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2703:2724  address(this).balance */\n      selfbalance\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2686:2725  playerA.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_88:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2686:2725  playerA.transfer(address(this).balance) */\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2743:2750  reset() */\n      tag_89\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2743:2748  reset */\n      tag_90\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2743:2750  reset() */\n      jump\t// in\n    tag_89:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2606:2778  if (playerChoice == 2) {... */\n    tag_87:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2530:2789  if (randomNum % 2 == 0) {... */\n    tag_86:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2820:2821  1 */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2815:2816  2 */\n      0x02\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2803:2812  randomNum */\n      dup1\n      sload\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2803:2816  randomNum % 2 */\n      dup2\n      tag_91\n      jumpi\n      invalid\n    tag_91:\n      mod\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2803:2821  randomNum % 2 == 1 */\n      eq\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2799:3118  if (randomNum % 2 == 1) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2848:2849  1 */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2838:2845  outcome */\n      dup1\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2838:2849  outcome = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2883:2884  1 */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2867:2879  playerChoice */\n      sload(0x05)\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2867:2884  playerChoice == 1 */\n      eq\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2863:3107  if (playerChoice == 1) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2912:2913  1 */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2905:2909  paid */\n      0x06\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2905:2913  paid = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3015:3022  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3015:3031  playerA.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3015:3054  playerA.transfer(address(this).balance) */\n      0x08fc\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3032:3053  address(this).balance */\n      selfbalance\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3015:3054  playerA.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_94:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3015:3054  playerA.transfer(address(this).balance) */\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3072:3079  reset() */\n      tag_95\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3072:3077  reset */\n      tag_90\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3072:3079  reset() */\n      jump\t// in\n    tag_95:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2863:3107  if (playerChoice == 1) {... */\n    tag_93:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2799:3118  if (randomNum % 2 == 1) {... */\n    tag_92:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3152:3153  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3144:3148  paid */\n      sload(0x06)\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3144:3153  paid == 0 */\n      eq\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3140:3351  if (paid == 0) {... */\n      iszero\n      tag_96\n      jumpi\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3263:3274  HouseWallet */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3263:3283  HouseWallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3263:3306  HouseWallet.transfer(address(this).balance) */\n      0x08fc\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3284:3305  address(this).balance */\n      selfbalance\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3263:3306  HouseWallet.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_97:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3263:3306  HouseWallet.transfer(address(this).balance) */\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3320:3327  reset() */\n      tag_98\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3320:3325  reset */\n      tag_90\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3320:3327  reset() */\n      jump\t// in\n    tag_98:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3140:3351  if (paid == 0) {... */\n    tag_96:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2372:3366  function getOutcome() public has_player_played returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":336:364  uint public playerPlayed = 0 */\n    tag_45:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":370:398  uint public playerChoice = 0 */\n    tag_48:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":121:167  uint constant public BET_MAX        = 10 ether */\n    tag_51:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":159:167  10 ether */\n      0x8ac7230489e80000\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":121:167  uint constant public BET_MAX        = 10 ether */\n      dup2\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4062:4248  function whoAmI() public view returns (uint) {... */\n    tag_54:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4101:4105  uint */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4135:4142  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4121:4142  msg.sender == playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4121:4131  msg.sender */\n      caller\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4121:4142  msg.sender == playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4117:4177  if (msg.sender == playerA) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4165:4166  1 */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4158:4166  return 1 */\n      swap1\n      pop\n      jump(tag_99)\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4117:4177  if (msg.sender == playerA) {... */\n    tag_100:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4196:4207  HouseWallet */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4182:4207  msg.sender == HouseWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4182:4192  msg.sender */\n      caller\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4182:4207  msg.sender == HouseWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4178:4242  if (msg.sender == HouseWallet) {... */\n      iszero\n      tag_101\n      jumpi\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4230:4231  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4223:4231  return 0 */\n      swap1\n      pop\n      jump(tag_99)\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4178:4242  if (msg.sender == HouseWallet) {... */\n    tag_101:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":4062:4248  function whoAmI() public view returns (uint) {... */\n    tag_99:\n      swap1\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2129:2271  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n    tag_58:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2103:2104  1 */\n      0x01\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2088:2100  playerChoice */\n      sload(0x05)\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2088:2104  playerChoice < 1 */\n      lt\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2080:2105  require(playerChoice < 1) */\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1869:1876  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1855:1876  msg.sender == playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1855:1865  msg.sender */\n      caller\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1855:1876  msg.sender == playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1847:1877  require(msg.sender == playerA) */\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2223:2229  choice */\n      dup1\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1973:1974  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1964:1970  choice */\n      dup2\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1964:1974  choice > 0 */\n      gt\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1956:1975  require(choice > 0) */\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2002:2003  3 */\n      0x03\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1993:1999  choice */\n      dup2\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1993:2003  choice < 3 */\n      lt\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1985:2004  require(choice < 3) */\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2257:2263  choice */\n      dup2\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2242:2254  playerChoice */\n      0x05\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2242:2263  playerChoice = choice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":1887:1888  _ */\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":2129:2271  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n      pop\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":276:297  uint public randomNum */\n    tag_61:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":303:330  uint public housePlayed = 0 */\n    tag_64:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3400:3645  function reset() private {... */\n    tag_90:\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3462:3463  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3444:3454  initialBet */\n      dup1\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3444:3463  initialBet      = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3499:3502  0x0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3473:3480  playerA */\n      0x07\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3473:3503  playerA         = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3539:3542  0x0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3513:3524  HouseWallet */\n      0x08\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3513:3543  HouseWallet     = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3571:3572  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3553:3564  housePlayed */\n      0x03\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3553:3572  housePlayed     = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3600:3601  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3582:3594  playerPlayed */\n      0x04\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3582:3601  playerPlayed    = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3629:3630  0 */\n      0x00\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3611:3623  playerChoice */\n      0x05\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3611:3630  playerChoice    = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Project-3/Starter code/Works_In_Progress/test_game.sol\":3400:3645  function reset() private {... */\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820cb82529f09e839b140bfa5ed747e0b1ea32227bec6ef196fb3687e9c80c5518464736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600060035560006004556000600555600060065534801561002457600080fd5b50610a9a806100346000396000f3fe6080604052600436106100e85760003560e01c80637e7e4b471161008a578063da91254c11610059578063da91254c14610291578063e92788d6146102bc578063f630aa65146102f7578063fc98f42e14610322576100e8565b80637e7e4b47146101e55780638e687aed14610210578063adef7cdd1461023b578063d0017a0c14610266576100e8565b806327793f87116100c657806327793f871461014d578063295b4e17146101785780634e22fb5b146101a35780636f9fb98a146101ba576100e8565b80631aa3a008146100ed5780631d73c64c146100f75780632626ab0814610122575b600080fd5b6100f561034d565b005b34801561010357600080fd5b5061010c610591565b6040518082815260200191505060405180910390f35b34801561012e57600080fd5b50610137610597565b6040518082815260200191505060405180910390f35b34801561015957600080fd5b5061016261059c565b6040518082815260200191505060405180910390f35b34801561018457600080fd5b5061018d6105a2565b6040518082815260200191505060405180910390f35b3480156101af57600080fd5b506101b86105a8565b005b3480156101c657600080fd5b506101cf610654565b6040518082815260200191505060405180910390f35b3480156101f157600080fd5b506101fa61065c565b6040518082815260200191505060405180910390f35b34801561021c57600080fd5b50610225610849565b6040518082815260200191505060405180910390f35b34801561024757600080fd5b5061025061084f565b6040518082815260200191505060405180910390f35b34801561027257600080fd5b5061027b610855565b6040518082815260200191505060405180910390f35b34801561029d57600080fd5b506102a6610861565b6040518082815260200191505060405180910390f35b3480156102c857600080fd5b506102f5600480360360208110156102df57600080fd5b8101908080359060200190929190505050610925565b005b34801561030357600080fd5b5061030c6109b4565b6040518082815260200191505060405180910390f35b34801561032e57600080fd5b506103376109ba565b6040518082815260200191505060405180910390f35b600134101561035b57600080fd5b678ac7230489e8000034111561037057600080fd5b60008054148061038257506000543410155b61038b57600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103e657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561048b5733600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160038190555061058f565b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156105385750600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561058e5733600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460008190555060016004819055505b5b565b60005481565b600181565b60015481565b60065481565b6000600154116105b757600080fd5b600080819055506000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001819055506000600681905550565b600047905090565b6000806005541161066c57600080fd5b620f423f600143034060001c8161067f57fe5b066002819055506000600280548161069357fe5b06141561072857600260018190555060026005541415610727576001600681905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561071d573d6000803e3d6000fd5b506107266109c0565b5b5b6001600280548161073557fe5b0614156107c95760018081905550600160055414156107c8576001600681905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156107be573d6000803e3d6000fd5b506107c76109c0565b5b5b6000600654141561084657600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561083c573d6000803e3d6000fd5b506108456109c0565b5b90565b60045481565b60055481565b678ac7230489e8000081565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108c25760019050610922565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156109215760009050610922565b5b90565b60016005541061093457600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098e57600080fd5b806000811161099c57600080fd5b600381106109a957600080fd5b816005819055505050565b60025481565b60035481565b600080819055506000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006003819055506000600481905550600060058190555056fea265627a7a72315820cb82529f09e839b140bfa5ed747e0b1ea32227bec6ef196fb3687e9c80c5518464736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9A DUP1 PUSH2 0x34 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E7E4B47 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDA91254C GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDA91254C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xE92788D6 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF630AA65 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xFC98F42E EQ PUSH2 0x322 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x7E7E4B47 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x8E687AED EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xADEF7CDD EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xD0017A0C EQ PUSH2 0x266 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x27793F87 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x27793F87 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x295B4E17 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x4E22FB5B EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x1BA JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x1D73C64C EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2626AB08 EQ PUSH2 0x122 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH2 0x34D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x5A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x65C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x855 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x925 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 CALLVALUE LT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 CALLVALUE GT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD EQ DUP1 PUSH2 0x382 JUMPI POP PUSH1 0x0 SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x48B JUMPI CALLER PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x58F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x538 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x58E JUMPI CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD GT PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF423F PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0x0 SHR DUP2 PUSH2 0x67F JUMPI INVALID JUMPDEST MOD PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD DUP2 PUSH2 0x693 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x728 JUMPI PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x727 JUMPI PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x71D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x726 PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD DUP2 PUSH2 0x735 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x7C7 PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x846 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x845 PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x922 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x922 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD LT PUSH2 0x934 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 GT PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x9A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCB DUP3 MSTORE SWAP16 MULMOD 0xE8 CODECOPY 0xB1 BLOCKHASH 0xBF 0xA5 0xED PUSH21 0x7E0B1EA32227BEC6EF196FB3687E9C80C551846473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "25:4541:0:-;;;329:1;303:27;;363:1;336:28;;397:1;370:28;;431:1;404:28;;25:4541;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:4541:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c80637e7e4b471161008a578063da91254c11610059578063da91254c14610291578063e92788d6146102bc578063f630aa65146102f7578063fc98f42e14610322576100e8565b80637e7e4b47146101e55780638e687aed14610210578063adef7cdd1461023b578063d0017a0c14610266576100e8565b806327793f87116100c657806327793f871461014d578063295b4e17146101785780634e22fb5b146101a35780636f9fb98a146101ba576100e8565b80631aa3a008146100ed5780631d73c64c146100f75780632626ab0814610122575b600080fd5b6100f561034d565b005b34801561010357600080fd5b5061010c610591565b6040518082815260200191505060405180910390f35b34801561012e57600080fd5b50610137610597565b6040518082815260200191505060405180910390f35b34801561015957600080fd5b5061016261059c565b6040518082815260200191505060405180910390f35b34801561018457600080fd5b5061018d6105a2565b6040518082815260200191505060405180910390f35b3480156101af57600080fd5b506101b86105a8565b005b3480156101c657600080fd5b506101cf610654565b6040518082815260200191505060405180910390f35b3480156101f157600080fd5b506101fa61065c565b6040518082815260200191505060405180910390f35b34801561021c57600080fd5b50610225610849565b6040518082815260200191505060405180910390f35b34801561024757600080fd5b5061025061084f565b6040518082815260200191505060405180910390f35b34801561027257600080fd5b5061027b610855565b6040518082815260200191505060405180910390f35b34801561029d57600080fd5b506102a6610861565b6040518082815260200191505060405180910390f35b3480156102c857600080fd5b506102f5600480360360208110156102df57600080fd5b8101908080359060200190929190505050610925565b005b34801561030357600080fd5b5061030c6109b4565b6040518082815260200191505060405180910390f35b34801561032e57600080fd5b506103376109ba565b6040518082815260200191505060405180910390f35b600134101561035b57600080fd5b678ac7230489e8000034111561037057600080fd5b60008054148061038257506000543410155b61038b57600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103e657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561048b5733600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160038190555061058f565b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156105385750600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561058e5733600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460008190555060016004819055505b5b565b60005481565b600181565b60015481565b60065481565b6000600154116105b757600080fd5b600080819055506000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001819055506000600681905550565b600047905090565b6000806005541161066c57600080fd5b620f423f600143034060001c8161067f57fe5b066002819055506000600280548161069357fe5b06141561072857600260018190555060026005541415610727576001600681905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561071d573d6000803e3d6000fd5b506107266109c0565b5b5b6001600280548161073557fe5b0614156107c95760018081905550600160055414156107c8576001600681905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156107be573d6000803e3d6000fd5b506107c76109c0565b5b5b6000600654141561084657600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561083c573d6000803e3d6000fd5b506108456109c0565b5b90565b60045481565b60055481565b678ac7230489e8000081565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108c25760019050610922565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156109215760009050610922565b5b90565b60016005541061093457600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098e57600080fd5b806000811161099c57600080fd5b600381106109a957600080fd5b816005819055505050565b60025481565b60035481565b600080819055506000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006003819055506000600481905550600060058190555056fea265627a7a72315820cb82529f09e839b140bfa5ed747e0b1ea32227bec6ef196fb3687e9c80c5518464736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E7E4B47 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDA91254C GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDA91254C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xE92788D6 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF630AA65 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xFC98F42E EQ PUSH2 0x322 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x7E7E4B47 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x8E687AED EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xADEF7CDD EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xD0017A0C EQ PUSH2 0x266 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x27793F87 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x27793F87 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x295B4E17 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x4E22FB5B EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x1BA JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x1D73C64C EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2626AB08 EQ PUSH2 0x122 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH2 0x34D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x5A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x65C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x855 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x925 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 CALLVALUE LT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 CALLVALUE GT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD EQ DUP1 PUSH2 0x382 JUMPI POP PUSH1 0x0 SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x48B JUMPI CALLER PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x58F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x538 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x58E JUMPI CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD GT PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF423F PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0x0 SHR DUP2 PUSH2 0x67F JUMPI INVALID JUMPDEST MOD PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD DUP2 PUSH2 0x693 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x728 JUMPI PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x727 JUMPI PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x71D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x726 PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD DUP2 PUSH2 0x735 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x7C7 PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x846 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x845 PUSH2 0x9C0 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x922 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x922 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD LT PUSH2 0x934 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 GT PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x9A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCB DUP3 MSTORE SWAP16 MULMOD 0xE8 CODECOPY 0xB1 BLOCKHASH 0xBF 0xA5 0xED PUSH21 0x7E0B1EA32227BEC6EF196FB3687E9C80C551846473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "25:4541:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1122:419;;;:::i;:::-;;173:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;173:22:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;50:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50:43:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;251:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;251:19:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;404:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;404:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4337:227;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4337:227:0;;;:::i;:::-;;3928:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3928:102:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2372:994;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:994:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;336:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;336:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;370;;8:9:-1;5:2;;;30:1;27;20:12;5:2;370:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;121:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;121:46:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4062:186;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4062:186:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2129:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2129:142:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2129:142:0;;;;;;;;;;;;;;;;;:::i;:::-;;276:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;276:21:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;303:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;303:27:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1122:419;88:5;871:9;:20;;863:29;;;;;;159:8;910:9;:20;;902:29;;;;;;963:1;949:10;;:15;:42;;;;981:10;;968:9;:23;;949:42;941:51;;;;;;1080:7;;;;;;;;;;;1066:21;;:10;:21;;;;1058:30;;;;;;1233:3;1210:27;;:11;;;;;;;;;;;:27;;;1206:310;;;1267:10;1253:11;;:24;;;;;;;;;;;;;;;;;;1305:1;1291:11;:15;;;;1206:310;;;1357:3;1338:23;;:7;;;;;;;;;;;:23;;;:54;;;;;1388:3;1365:27;;:11;;;;;;;;;;;:27;;;;1338:54;1333:183;;;1422:10;1409:7;;:23;;;;;;;;;;;;;;;;;;1459:9;1446:10;:22;;;;1497:1;1482:12;:16;;;;1333:183;1206:310;1122:419::o;173:22::-;;;;:::o;50:43::-;88:5;50:43;:::o;251:19::-;;;;:::o;404:28::-;;;;:::o;4337:227::-;4311:1;4301:7;;:11;4293:20;;;;;;4416:1;4398:10;:19;;;;4453:3;4427:7;;:30;;;;;;;;;;;;;;;;;;4493:3;4467:11;;:30;;;;;;;;;;;;;;;;;;4525:1;4507:7;:19;;;;4554:1;4536:4;:19;;;;4337:227::o;3928:102::-;3979:4;4002:21;3995:28;;3928:102;:::o;2372:994::-;2428:4;2346:1;2331:12;;:16;2323:25;;;;;;2504:6;2498:1;2485:12;:14;2475:25;2470:31;;:40;;;;;;2458:9;:52;;;;2551:1;2546;2534:9;;:13;;;;;;:18;2530:259;;;2591:1;2581:7;:11;;;;2626:1;2610:12;;:17;2606:172;;;2655:1;2648:4;:8;;;;2686:7;;;;;;;;;;;:16;;:39;2703:21;2686:39;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2686:39:0;2743:7;:5;:7::i;:::-;2606:172;2530:259;2820:1;2815;2803:9;;:13;;;;;;:18;2799:319;;;2848:1;2838:7;:11;;;;2883:1;2867:12;;:17;2863:244;;;2912:1;2905:4;:8;;;;3015:7;;;;;;;;;;;:16;;:39;3032:21;3015:39;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3015:39:0;3072:7;:5;:7::i;:::-;2863:244;2799:319;3152:1;3144:4;;:9;3140:211;;;3263:11;;;;;;;;;;;:20;;:43;3284:21;3263:43;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3263:43:0;3320:7;:5;:7::i;:::-;3140:211;2372:994;:::o;336:28::-;;;;:::o;370:::-;;;;:::o;121:46::-;159:8;121:46;:::o;4062:186::-;4101:4;4135:7;;;;;;;;;;;4121:21;;:10;:21;;;4117:60;;;4165:1;4158:8;;;;4117:60;4196:11;;;;;;;;;;;4182:25;;:10;:25;;;4178:64;;;4230:1;4223:8;;;;4178:64;4062:186;;:::o;2129:142::-;2103:1;2088:12;;:16;2080:25;;;;;;1869:7;;;;;;;;;;;1855:21;;:10;:21;;;1847:30;;;;;;2223:6;1973:1;1964:6;:10;1956:19;;;;;;2002:1;1993:6;:10;1985:19;;;;;;2257:6;2242:12;:21;;;;1887:1;2129:142;:::o;276:21::-;;;;:::o;303:27::-;;;;:::o;3400:245::-;3462:1;3444:10;:19;;;;3499:3;3473:7;;:30;;;;;;;;;;;;;;;;;;3539:3;3513:11;;:30;;;;;;;;;;;;;;;;;;3571:1;3553:11;:19;;;;3600:1;3582:12;:19;;;;3629:1;3611:12;:19;;;;3400:245::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "542800",
								"executionCost": "20599",
								"totalCost": "563399"
							},
							"external": {
								"BET_MAX()": "294",
								"BET_MIN()": "273",
								"getContractBalance()": "304",
								"getOutcome()": "infinite",
								"housePlayed()": "1093",
								"initialBet()": "1051",
								"outcome()": "1028",
								"paid()": "1050",
								"playerChoice()": "1072",
								"playerChooses(uint256)": "22030",
								"playerPlayed()": "1050",
								"randomNum()": "1071",
								"register()": "66244",
								"reset_contract()": "57810",
								"whoAmI()": "1992"
							},
							"internal": {
								"reset()": "61799"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 4566,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 4566,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 4566,
									"name": "MSTORE"
								},
								{
									"begin": 329,
									"end": 330,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 303,
									"end": 330,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 303,
									"end": 330,
									"name": "SSTORE"
								},
								{
									"begin": 363,
									"end": 364,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 336,
									"end": 364,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 336,
									"end": 364,
									"name": "SSTORE"
								},
								{
									"begin": 397,
									"end": 398,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 370,
									"end": 398,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 370,
									"end": 398,
									"name": "SSTORE"
								},
								{
									"begin": 431,
									"end": 432,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 404,
									"end": 432,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 404,
									"end": 432,
									"name": "SSTORE"
								},
								{
									"begin": 25,
									"end": 4566,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 4566,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 4566,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 4566,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 4566,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 4566,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 4566,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 4566,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 4566,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820cb82529f09e839b140bfa5ed747e0b1ea32227bec6ef196fb3687e9c80c5518464736f6c63430005110032",
									".code": [
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "SHR"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "7E7E4B47"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "GT"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "DA91254C"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "GT"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "DA91254C"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "E92788D6"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "F630AA65"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "FC98F42E"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMP"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "7E7E4B47"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "8E687AED"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "ADEF7CDD"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "D0017A0C"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMP"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "27793F87"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "GT"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "27793F87"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "295B4E17"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "4E22FB5B"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "6F9FB98A"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMP"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "1AA3A008"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "1D73C64C"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "2626AB08"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 4566,
											"name": "REVERT"
										},
										{
											"begin": 1122,
											"end": 1541,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1122,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1122,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1122,
											"end": 1541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1541,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1122,
											"end": 1541,
											"name": "STOP"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "JUMPDEST"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "POP"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "JUMPDEST"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "MLOAD"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "DUP1"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "DUP3"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "DUP2"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "MSTORE"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "ADD"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "SWAP2"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "POP"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "POP"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "MLOAD"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "DUP1"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "SWAP2"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "SUB"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "SWAP1"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "RETURN"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "MLOAD"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "DUP3"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "DUP2"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "MSTORE"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "SWAP2"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "MLOAD"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "SWAP2"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "SUB"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "RETURN"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "MLOAD"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "MLOAD"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "SUB"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "RETURN"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "MLOAD"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "DUP3"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "MSTORE"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "ADD"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "SWAP2"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "MLOAD"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "SWAP2"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "SUB"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "RETURN"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "JUMPDEST"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "POP"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "JUMPDEST"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "STOP"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "JUMPDEST"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "POP"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "JUMPDEST"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "MLOAD"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "DUP1"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "DUP3"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "DUP2"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "MSTORE"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "ADD"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "SWAP2"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "POP"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "POP"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "MLOAD"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "DUP1"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "SWAP2"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "SUB"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "SWAP1"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "RETURN"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "JUMPDEST"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "POP"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "JUMPDEST"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "MLOAD"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "DUP1"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "DUP3"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "DUP2"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "MSTORE"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "ADD"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "SWAP2"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "POP"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "POP"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "MLOAD"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "DUP1"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "SWAP2"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "SUB"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "SWAP1"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "RETURN"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "JUMPDEST"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "JUMPDEST"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "MLOAD"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "DUP1"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "DUP3"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "MSTORE"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "ADD"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "SWAP2"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "MLOAD"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "DUP1"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "SWAP2"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "SUB"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "SWAP1"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "RETURN"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "MLOAD"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "DUP1"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "DUP3"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "DUP2"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "ADD"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "SWAP2"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "MLOAD"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "DUP1"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "SWAP2"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "SUB"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "RETURN"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "JUMPDEST"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "JUMPDEST"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "MLOAD"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "DUP2"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "MSTORE"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "ADD"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "SWAP2"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "MLOAD"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "SWAP2"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "SUB"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "SWAP1"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "RETURN"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "JUMPDEST"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "POP"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "JUMPDEST"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "MLOAD"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "DUP1"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "DUP3"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "DUP2"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "MSTORE"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "ADD"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "SWAP2"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "POP"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "POP"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "MLOAD"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "DUP1"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "SWAP2"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "SUB"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "SWAP1"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "RETURN"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "JUMPDEST"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "POP"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "DUP1"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "DUP2"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "ADD"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "SWAP1"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "DUP1"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "DUP1"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "SWAP1"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "ADD"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "SWAP1"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "SWAP3"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "SWAP2"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "SWAP1"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "POP"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "POP"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "POP"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "JUMPDEST"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "STOP"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "MLOAD"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "DUP3"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "DUP2"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "MSTORE"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "ADD"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "SWAP2"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "MLOAD"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "SWAP2"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "SUB"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "SWAP1"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "RETURN"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "MLOAD"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "DUP3"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "MSTORE"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "ADD"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "SWAP2"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "MLOAD"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "SWAP2"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "SUB"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "RETURN"
										},
										{
											"begin": 1122,
											"end": 1541,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1122,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 93,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 871,
											"end": 880,
											"name": "CALLVALUE"
										},
										{
											"begin": 871,
											"end": 891,
											"name": "LT"
										},
										{
											"begin": 871,
											"end": 891,
											"name": "ISZERO"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPI"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "DUP1"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "REVERT"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPDEST"
										},
										{
											"begin": 159,
											"end": 167,
											"name": "PUSH",
											"value": "8AC7230489E80000"
										},
										{
											"begin": 910,
											"end": 919,
											"name": "CALLVALUE"
										},
										{
											"begin": 910,
											"end": 930,
											"name": "GT"
										},
										{
											"begin": 910,
											"end": 930,
											"name": "ISZERO"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "JUMPI"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "DUP1"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "REVERT"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 902,
											"end": 931,
											"name": "JUMPDEST"
										},
										{
											"begin": 963,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 949,
											"end": 959,
											"name": "DUP1"
										},
										{
											"begin": 949,
											"end": 959,
											"name": "SLOAD"
										},
										{
											"begin": 949,
											"end": 964,
											"name": "EQ"
										},
										{
											"begin": 949,
											"end": 991,
											"name": "DUP1"
										},
										{
											"begin": 949,
											"end": 991,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 949,
											"end": 991,
											"name": "JUMPI"
										},
										{
											"begin": 949,
											"end": 991,
											"name": "POP"
										},
										{
											"begin": 981,
											"end": 991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 981,
											"end": 991,
											"name": "SLOAD"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "CALLVALUE"
										},
										{
											"begin": 968,
											"end": 991,
											"name": "LT"
										},
										{
											"begin": 968,
											"end": 991,
											"name": "ISZERO"
										},
										{
											"begin": 949,
											"end": 991,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 949,
											"end": 991,
											"name": "JUMPDEST"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "JUMPI"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "DUP1"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "REVERT"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 941,
											"end": 992,
											"name": "JUMPDEST"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "SWAP1"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "SLOAD"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "SWAP1"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "EXP"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "SWAP1"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "DIV"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "AND"
										},
										{
											"begin": 1066,
											"end": 1087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1087,
											"name": "AND"
										},
										{
											"begin": 1066,
											"end": 1076,
											"name": "CALLER"
										},
										{
											"begin": 1066,
											"end": 1087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1087,
											"name": "AND"
										},
										{
											"begin": 1066,
											"end": 1087,
											"name": "EQ"
										},
										{
											"begin": 1066,
											"end": 1087,
											"name": "ISZERO"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "JUMPI"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "REVERT"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1058,
											"end": 1088,
											"name": "JUMPDEST"
										},
										{
											"begin": 1233,
											"end": 1236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1210,
											"end": 1237,
											"name": "AND"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "SWAP1"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "SLOAD"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "SWAP1"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "EXP"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "SWAP1"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "DIV"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1210,
											"end": 1221,
											"name": "AND"
										},
										{
											"begin": 1210,
											"end": 1237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1210,
											"end": 1237,
											"name": "AND"
										},
										{
											"begin": 1210,
											"end": 1237,
											"name": "EQ"
										},
										{
											"begin": 1206,
											"end": 1516,
											"name": "ISZERO"
										},
										{
											"begin": 1206,
											"end": 1516,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1206,
											"end": 1516,
											"name": "JUMPI"
										},
										{
											"begin": 1267,
											"end": 1277,
											"name": "CALLER"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "EXP"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "DUP2"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "SLOAD"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "DUP2"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "MUL"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "NOT"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "AND"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "SWAP1"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "DUP4"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "AND"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "MUL"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "OR"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "SWAP1"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "SSTORE"
										},
										{
											"begin": 1253,
											"end": 1277,
											"name": "POP"
										},
										{
											"begin": 1305,
											"end": 1306,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1302,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1291,
											"end": 1306,
											"name": "DUP2"
										},
										{
											"begin": 1291,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 1291,
											"end": 1306,
											"name": "SSTORE"
										},
										{
											"begin": 1291,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 1206,
											"end": 1516,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1206,
											"end": 1516,
											"name": "JUMP"
										},
										{
											"begin": 1206,
											"end": 1516,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1206,
											"end": 1516,
											"name": "JUMPDEST"
										},
										{
											"begin": 1357,
											"end": 1360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1361,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1361,
											"name": "AND"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "SLOAD"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "EXP"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "DIV"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "AND"
										},
										{
											"begin": 1338,
											"end": 1361,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1361,
											"name": "AND"
										},
										{
											"begin": 1338,
											"end": 1361,
											"name": "EQ"
										},
										{
											"begin": 1338,
											"end": 1392,
											"name": "DUP1"
										},
										{
											"begin": 1338,
											"end": 1392,
											"name": "ISZERO"
										},
										{
											"begin": 1338,
											"end": 1392,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1338,
											"end": 1392,
											"name": "JUMPI"
										},
										{
											"begin": 1338,
											"end": 1392,
											"name": "POP"
										},
										{
											"begin": 1388,
											"end": 1391,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1365,
											"end": 1392,
											"name": "AND"
										},
										{
											"begin": 1365,
											"end": 1376,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1365,
											"end": 1376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1376,
											"name": "SWAP1"
										},
										{
											"begin": 1365,
											"end": 1376,
											"name": "SLOAD"
										},
										{
											"begin": 1365,
											"end": 1376,
											"name": "SWAP1"
										},
										{
											"begin": 1365,
											"end": 1376,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1365,
											"end": 1376,
											"name": "EXP"
										},
										{
											"begin": 1365,
											"end": 1376,
											"name": "SWAP1"
										},
										{
											"begin": 1365,
											"end": 1376,
											"name": "DIV"
										},
										{
											"begin": 1365,
											"end": 1376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1365,
											"end": 1376,
											"name": "AND"
										},
										{
											"begin": 1365,
											"end": 1392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1365,
											"end": 1392,
											"name": "AND"
										},
										{
											"begin": 1365,
											"end": 1392,
											"name": "EQ"
										},
										{
											"begin": 1365,
											"end": 1392,
											"name": "ISZERO"
										},
										{
											"begin": 1338,
											"end": 1392,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1338,
											"end": 1392,
											"name": "JUMPDEST"
										},
										{
											"begin": 1333,
											"end": 1516,
											"name": "ISZERO"
										},
										{
											"begin": 1333,
											"end": 1516,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1333,
											"end": 1516,
											"name": "JUMPI"
										},
										{
											"begin": 1422,
											"end": 1432,
											"name": "CALLER"
										},
										{
											"begin": 1409,
											"end": 1416,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1409,
											"end": 1416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "EXP"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "DUP2"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "SLOAD"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "DUP2"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "MUL"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "NOT"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "AND"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "SWAP1"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "DUP4"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "AND"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "MUL"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "OR"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "SWAP1"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "SSTORE"
										},
										{
											"begin": 1409,
											"end": 1432,
											"name": "POP"
										},
										{
											"begin": 1459,
											"end": 1468,
											"name": "CALLVALUE"
										},
										{
											"begin": 1446,
											"end": 1456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1468,
											"name": "DUP2"
										},
										{
											"begin": 1446,
											"end": 1468,
											"name": "SWAP1"
										},
										{
											"begin": 1446,
											"end": 1468,
											"name": "SSTORE"
										},
										{
											"begin": 1446,
											"end": 1468,
											"name": "POP"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 1494,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 1498,
											"name": "DUP2"
										},
										{
											"begin": 1482,
											"end": 1498,
											"name": "SWAP1"
										},
										{
											"begin": 1482,
											"end": 1498,
											"name": "SSTORE"
										},
										{
											"begin": 1482,
											"end": 1498,
											"name": "POP"
										},
										{
											"begin": 1333,
											"end": 1516,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1333,
											"end": 1516,
											"name": "JUMPDEST"
										},
										{
											"begin": 1206,
											"end": 1516,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1206,
											"end": 1516,
											"name": "JUMPDEST"
										},
										{
											"begin": 1122,
											"end": 1541,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "JUMPDEST"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "SLOAD"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "DUP2"
										},
										{
											"begin": 173,
											"end": 195,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 93,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "DUP2"
										},
										{
											"begin": 50,
											"end": 93,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "SLOAD"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 270,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "SLOAD"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 404,
											"end": 432,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "JUMPDEST"
										},
										{
											"begin": 4311,
											"end": 4312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4308,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4301,
											"end": 4308,
											"name": "SLOAD"
										},
										{
											"begin": 4301,
											"end": 4312,
											"name": "GT"
										},
										{
											"begin": 4293,
											"end": 4313,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4293,
											"end": 4313,
											"name": "JUMPI"
										},
										{
											"begin": 4293,
											"end": 4313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4313,
											"name": "DUP1"
										},
										{
											"begin": 4293,
											"end": 4313,
											"name": "REVERT"
										},
										{
											"begin": 4293,
											"end": 4313,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 4293,
											"end": 4313,
											"name": "JUMPDEST"
										},
										{
											"begin": 4416,
											"end": 4417,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "DUP1"
										},
										{
											"begin": 4398,
											"end": 4417,
											"name": "DUP2"
										},
										{
											"begin": 4398,
											"end": 4417,
											"name": "SWAP1"
										},
										{
											"begin": 4398,
											"end": 4417,
											"name": "SSTORE"
										},
										{
											"begin": 4398,
											"end": 4417,
											"name": "POP"
										},
										{
											"begin": 4453,
											"end": 4456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4434,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4427,
											"end": 4434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "EXP"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "DUP2"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "SLOAD"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "DUP2"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "MUL"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "NOT"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "AND"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "SWAP1"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "DUP4"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "AND"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "MUL"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "OR"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "SWAP1"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "SSTORE"
										},
										{
											"begin": 4427,
											"end": 4457,
											"name": "POP"
										},
										{
											"begin": 4493,
											"end": 4496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4467,
											"end": 4478,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4467,
											"end": 4478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "EXP"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "DUP2"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "SLOAD"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "DUP2"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "MUL"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "NOT"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "AND"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "SWAP1"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "DUP4"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "AND"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "MUL"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "OR"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "SWAP1"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "SSTORE"
										},
										{
											"begin": 4467,
											"end": 4497,
											"name": "POP"
										},
										{
											"begin": 4525,
											"end": 4526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4514,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4507,
											"end": 4526,
											"name": "DUP2"
										},
										{
											"begin": 4507,
											"end": 4526,
											"name": "SWAP1"
										},
										{
											"begin": 4507,
											"end": 4526,
											"name": "SSTORE"
										},
										{
											"begin": 4507,
											"end": 4526,
											"name": "POP"
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4540,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4536,
											"end": 4555,
											"name": "DUP2"
										},
										{
											"begin": 4536,
											"end": 4555,
											"name": "SWAP1"
										},
										{
											"begin": 4536,
											"end": 4555,
											"name": "SSTORE"
										},
										{
											"begin": 4536,
											"end": 4555,
											"name": "POP"
										},
										{
											"begin": 4337,
											"end": 4564,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "JUMPDEST"
										},
										{
											"begin": 3979,
											"end": 3983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4023,
											"name": "SELFBALANCE"
										},
										{
											"begin": 3995,
											"end": 4023,
											"name": "SWAP1"
										},
										{
											"begin": 3995,
											"end": 4023,
											"name": "POP"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "SWAP1"
										},
										{
											"begin": 3928,
											"end": 4030,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "JUMPDEST"
										},
										{
											"begin": 2428,
											"end": 2432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2343,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2331,
											"end": 2343,
											"name": "SLOAD"
										},
										{
											"begin": 2331,
											"end": 2347,
											"name": "GT"
										},
										{
											"begin": 2323,
											"end": 2348,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2323,
											"end": 2348,
											"name": "JUMPI"
										},
										{
											"begin": 2323,
											"end": 2348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2348,
											"name": "DUP1"
										},
										{
											"begin": 2323,
											"end": 2348,
											"name": "REVERT"
										},
										{
											"begin": 2323,
											"end": 2348,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2323,
											"end": 2348,
											"name": "JUMPDEST"
										},
										{
											"begin": 2504,
											"end": 2510,
											"name": "PUSH",
											"value": "F423F"
										},
										{
											"begin": 2498,
											"end": 2499,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2485,
											"end": 2497,
											"name": "NUMBER"
										},
										{
											"begin": 2485,
											"end": 2499,
											"name": "SUB"
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "BLOCKHASH"
										},
										{
											"begin": 2470,
											"end": 2501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2501,
											"name": "SHR"
										},
										{
											"begin": 2470,
											"end": 2510,
											"name": "DUP2"
										},
										{
											"begin": 2470,
											"end": 2510,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2470,
											"end": 2510,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 2510,
											"name": "INVALID"
										},
										{
											"begin": 2470,
											"end": 2510,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2470,
											"end": 2510,
											"name": "JUMPDEST"
										},
										{
											"begin": 2470,
											"end": 2510,
											"name": "MOD"
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "DUP2"
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "SSTORE"
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "POP"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 2547,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP1"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "SLOAD"
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "DUP2"
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "JUMPI"
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "INVALID"
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "JUMPDEST"
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "MOD"
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "EQ"
										},
										{
											"begin": 2530,
											"end": 2789,
											"name": "ISZERO"
										},
										{
											"begin": 2530,
											"end": 2789,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2530,
											"end": 2789,
											"name": "JUMPI"
										},
										{
											"begin": 2591,
											"end": 2592,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2581,
											"end": 2588,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2581,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2581,
											"end": 2592,
											"name": "SWAP1"
										},
										{
											"begin": 2581,
											"end": 2592,
											"name": "SSTORE"
										},
										{
											"begin": 2581,
											"end": 2592,
											"name": "POP"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2610,
											"end": 2622,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2610,
											"end": 2622,
											"name": "SLOAD"
										},
										{
											"begin": 2610,
											"end": 2627,
											"name": "EQ"
										},
										{
											"begin": 2606,
											"end": 2778,
											"name": "ISZERO"
										},
										{
											"begin": 2606,
											"end": 2778,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2606,
											"end": 2778,
											"name": "JUMPI"
										},
										{
											"begin": 2655,
											"end": 2656,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2648,
											"end": 2656,
											"name": "DUP2"
										},
										{
											"begin": 2648,
											"end": 2656,
											"name": "SWAP1"
										},
										{
											"begin": 2648,
											"end": 2656,
											"name": "SSTORE"
										},
										{
											"begin": 2648,
											"end": 2656,
											"name": "POP"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "SWAP1"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "SLOAD"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "SWAP1"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "EXP"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "SWAP1"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "DIV"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "AND"
										},
										{
											"begin": 2686,
											"end": 2702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2686,
											"end": 2702,
											"name": "AND"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 2703,
											"end": 2724,
											"name": "SELFBALANCE"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "SWAP1"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "DUP2"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "ISZERO"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "MUL"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "SWAP1"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "MLOAD"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "MLOAD"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "DUP1"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "DUP4"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "SUB"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "DUP2"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "DUP6"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "DUP9"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "DUP9"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "CALL"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "SWAP4"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "POP"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "POP"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "POP"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "POP"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "POP"
										},
										{
											"begin": 2743,
											"end": 2750,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2743,
											"end": 2748,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2743,
											"end": 2750,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2743,
											"end": 2750,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2743,
											"end": 2750,
											"name": "JUMPDEST"
										},
										{
											"begin": 2606,
											"end": 2778,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2606,
											"end": 2778,
											"name": "JUMPDEST"
										},
										{
											"begin": 2530,
											"end": 2789,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2530,
											"end": 2789,
											"name": "JUMPDEST"
										},
										{
											"begin": 2820,
											"end": 2821,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2815,
											"end": 2816,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2803,
											"end": 2812,
											"name": "DUP1"
										},
										{
											"begin": 2803,
											"end": 2812,
											"name": "SLOAD"
										},
										{
											"begin": 2803,
											"end": 2816,
											"name": "DUP2"
										},
										{
											"begin": 2803,
											"end": 2816,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2803,
											"end": 2816,
											"name": "JUMPI"
										},
										{
											"begin": 2803,
											"end": 2816,
											"name": "INVALID"
										},
										{
											"begin": 2803,
											"end": 2816,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2803,
											"end": 2816,
											"name": "JUMPDEST"
										},
										{
											"begin": 2803,
											"end": 2816,
											"name": "MOD"
										},
										{
											"begin": 2803,
											"end": 2821,
											"name": "EQ"
										},
										{
											"begin": 2799,
											"end": 3118,
											"name": "ISZERO"
										},
										{
											"begin": 2799,
											"end": 3118,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2799,
											"end": 3118,
											"name": "JUMPI"
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2838,
											"end": 2845,
											"name": "DUP1"
										},
										{
											"begin": 2838,
											"end": 2849,
											"name": "DUP2"
										},
										{
											"begin": 2838,
											"end": 2849,
											"name": "SWAP1"
										},
										{
											"begin": 2838,
											"end": 2849,
											"name": "SSTORE"
										},
										{
											"begin": 2838,
											"end": 2849,
											"name": "POP"
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2867,
											"end": 2879,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2867,
											"end": 2879,
											"name": "SLOAD"
										},
										{
											"begin": 2867,
											"end": 2884,
											"name": "EQ"
										},
										{
											"begin": 2863,
											"end": 3107,
											"name": "ISZERO"
										},
										{
											"begin": 2863,
											"end": 3107,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2863,
											"end": 3107,
											"name": "JUMPI"
										},
										{
											"begin": 2912,
											"end": 2913,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2905,
											"end": 2909,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "DUP2"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "SWAP1"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "SSTORE"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "POP"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "SWAP1"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "SLOAD"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "SWAP1"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "EXP"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "SWAP1"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "DIV"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "AND"
										},
										{
											"begin": 3015,
											"end": 3031,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3015,
											"end": 3031,
											"name": "AND"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 3032,
											"end": 3053,
											"name": "SELFBALANCE"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "SWAP1"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "DUP2"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "ISZERO"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "MUL"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "SWAP1"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "MLOAD"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "MLOAD"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "DUP1"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "DUP4"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "SUB"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "DUP2"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "DUP6"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "DUP9"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "DUP9"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "CALL"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "SWAP4"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "POP"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "POP"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "POP"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "POP"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3015,
											"end": 3054,
											"name": "POP"
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 3072,
											"end": 3077,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "JUMPDEST"
										},
										{
											"begin": 2863,
											"end": 3107,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2863,
											"end": 3107,
											"name": "JUMPDEST"
										},
										{
											"begin": 2799,
											"end": 3118,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2799,
											"end": 3118,
											"name": "JUMPDEST"
										},
										{
											"begin": 3152,
											"end": 3153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3148,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3148,
											"name": "SLOAD"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "EQ"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "ISZERO"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "JUMPI"
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "SWAP1"
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "SLOAD"
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "SWAP1"
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "EXP"
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "SWAP1"
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "DIV"
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "AND"
										},
										{
											"begin": 3263,
											"end": 3283,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3263,
											"end": 3283,
											"name": "AND"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 3284,
											"end": 3305,
											"name": "SELFBALANCE"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "SWAP1"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "DUP2"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "ISZERO"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "MUL"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "SWAP1"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "MLOAD"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "MLOAD"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "DUP1"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "DUP4"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "SUB"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "DUP2"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "DUP6"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "DUP9"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "DUP9"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "CALL"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "SWAP4"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "POP"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "POP"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "POP"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "POP"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3263,
											"end": 3306,
											"name": "POP"
										},
										{
											"begin": 3320,
											"end": 3327,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3320,
											"end": 3325,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3320,
											"end": 3327,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3320,
											"end": 3327,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 3320,
											"end": 3327,
											"name": "JUMPDEST"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "JUMPDEST"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "SWAP1"
										},
										{
											"begin": 2372,
											"end": 3366,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "JUMPDEST"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "SLOAD"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 336,
											"end": 364,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "SLOAD"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "DUP2"
										},
										{
											"begin": 370,
											"end": 398,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "JUMPDEST"
										},
										{
											"begin": 159,
											"end": 167,
											"name": "PUSH",
											"value": "8AC7230489E80000"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "DUP2"
										},
										{
											"begin": 121,
											"end": 167,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "JUMPDEST"
										},
										{
											"begin": 4101,
											"end": 4105,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "SWAP1"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "SLOAD"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "SWAP1"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "EXP"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "SWAP1"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "DIV"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "AND"
										},
										{
											"begin": 4121,
											"end": 4142,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4121,
											"end": 4142,
											"name": "AND"
										},
										{
											"begin": 4121,
											"end": 4131,
											"name": "CALLER"
										},
										{
											"begin": 4121,
											"end": 4142,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4121,
											"end": 4142,
											"name": "AND"
										},
										{
											"begin": 4121,
											"end": 4142,
											"name": "EQ"
										},
										{
											"begin": 4117,
											"end": 4177,
											"name": "ISZERO"
										},
										{
											"begin": 4117,
											"end": 4177,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 4117,
											"end": 4177,
											"name": "JUMPI"
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4158,
											"end": 4166,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4166,
											"name": "POP"
										},
										{
											"begin": 4158,
											"end": 4166,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 4158,
											"end": 4166,
											"name": "JUMP"
										},
										{
											"begin": 4117,
											"end": 4177,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 4117,
											"end": 4177,
											"name": "JUMPDEST"
										},
										{
											"begin": 4196,
											"end": 4207,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4196,
											"end": 4207,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4207,
											"name": "SWAP1"
										},
										{
											"begin": 4196,
											"end": 4207,
											"name": "SLOAD"
										},
										{
											"begin": 4196,
											"end": 4207,
											"name": "SWAP1"
										},
										{
											"begin": 4196,
											"end": 4207,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4196,
											"end": 4207,
											"name": "EXP"
										},
										{
											"begin": 4196,
											"end": 4207,
											"name": "SWAP1"
										},
										{
											"begin": 4196,
											"end": 4207,
											"name": "DIV"
										},
										{
											"begin": 4196,
											"end": 4207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4196,
											"end": 4207,
											"name": "AND"
										},
										{
											"begin": 4182,
											"end": 4207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4182,
											"end": 4207,
											"name": "AND"
										},
										{
											"begin": 4182,
											"end": 4192,
											"name": "CALLER"
										},
										{
											"begin": 4182,
											"end": 4207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4182,
											"end": 4207,
											"name": "AND"
										},
										{
											"begin": 4182,
											"end": 4207,
											"name": "EQ"
										},
										{
											"begin": 4178,
											"end": 4242,
											"name": "ISZERO"
										},
										{
											"begin": 4178,
											"end": 4242,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 4178,
											"end": 4242,
											"name": "JUMPI"
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4231,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4231,
											"name": "POP"
										},
										{
											"begin": 4223,
											"end": 4231,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 4223,
											"end": 4231,
											"name": "JUMP"
										},
										{
											"begin": 4178,
											"end": 4242,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 4178,
											"end": 4242,
											"name": "JUMPDEST"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "JUMPDEST"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "SWAP1"
										},
										{
											"begin": 4062,
											"end": 4248,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "JUMPDEST"
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2088,
											"end": 2100,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2088,
											"end": 2100,
											"name": "SLOAD"
										},
										{
											"begin": 2088,
											"end": 2104,
											"name": "LT"
										},
										{
											"begin": 2080,
											"end": 2105,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2080,
											"end": 2105,
											"name": "JUMPI"
										},
										{
											"begin": 2080,
											"end": 2105,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2105,
											"name": "DUP1"
										},
										{
											"begin": 2080,
											"end": 2105,
											"name": "REVERT"
										},
										{
											"begin": 2080,
											"end": 2105,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2080,
											"end": 2105,
											"name": "JUMPDEST"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "SWAP1"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "SLOAD"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "SWAP1"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "EXP"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "SWAP1"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "DIV"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "AND"
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "AND"
										},
										{
											"begin": 1855,
											"end": 1865,
											"name": "CALLER"
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "AND"
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "EQ"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "JUMPI"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "DUP1"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "REVERT"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "JUMPDEST"
										},
										{
											"begin": 2223,
											"end": 2229,
											"name": "DUP1"
										},
										{
											"begin": 1973,
											"end": 1974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2"
										},
										{
											"begin": 1964,
											"end": 1974,
											"name": "GT"
										},
										{
											"begin": 1956,
											"end": 1975,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 1956,
											"end": 1975,
											"name": "JUMPI"
										},
										{
											"begin": 1956,
											"end": 1975,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1975,
											"name": "DUP1"
										},
										{
											"begin": 1956,
											"end": 1975,
											"name": "REVERT"
										},
										{
											"begin": 1956,
											"end": 1975,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 1956,
											"end": 1975,
											"name": "JUMPDEST"
										},
										{
											"begin": 2002,
											"end": 2003,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "DUP2"
										},
										{
											"begin": 1993,
											"end": 2003,
											"name": "LT"
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "JUMPI"
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "DUP1"
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "REVERT"
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "JUMPDEST"
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2242,
											"end": 2263,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2263,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2263,
											"name": "SSTORE"
										},
										{
											"begin": 2242,
											"end": 2263,
											"name": "POP"
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "POP"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "POP"
										},
										{
											"begin": 2129,
											"end": 2271,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "SLOAD"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "DUP2"
										},
										{
											"begin": 276,
											"end": 297,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "SLOAD"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 330,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3400,
											"end": 3645,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 3400,
											"end": 3645,
											"name": "JUMPDEST"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3444,
											"end": 3454,
											"name": "DUP1"
										},
										{
											"begin": 3444,
											"end": 3463,
											"name": "DUP2"
										},
										{
											"begin": 3444,
											"end": 3463,
											"name": "SWAP1"
										},
										{
											"begin": 3444,
											"end": 3463,
											"name": "SSTORE"
										},
										{
											"begin": 3444,
											"end": 3463,
											"name": "POP"
										},
										{
											"begin": 3499,
											"end": 3502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "EXP"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "DUP2"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "SLOAD"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "DUP2"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "MUL"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "NOT"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "AND"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "SWAP1"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "DUP4"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "AND"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "MUL"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "OR"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "SWAP1"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "SSTORE"
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "POP"
										},
										{
											"begin": 3539,
											"end": 3542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "EXP"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "DUP2"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "SLOAD"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "DUP2"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "MUL"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "NOT"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "AND"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "SWAP1"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "DUP4"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "AND"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "MUL"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "OR"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "SWAP1"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "SSTORE"
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "POP"
										},
										{
											"begin": 3571,
											"end": 3572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3564,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "DUP2"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "SWAP1"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "SSTORE"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "POP"
										},
										{
											"begin": 3600,
											"end": 3601,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3594,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3582,
											"end": 3601,
											"name": "DUP2"
										},
										{
											"begin": 3582,
											"end": 3601,
											"name": "SWAP1"
										},
										{
											"begin": 3582,
											"end": 3601,
											"name": "SSTORE"
										},
										{
											"begin": 3582,
											"end": 3601,
											"name": "POP"
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3623,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "DUP2"
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "SWAP1"
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "SSTORE"
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "POP"
										},
										{
											"begin": 3400,
											"end": 3645,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BET_MAX()": "d0017a0c",
							"BET_MIN()": "2626ab08",
							"getContractBalance()": "6f9fb98a",
							"getOutcome()": "7e7e4b47",
							"housePlayed()": "fc98f42e",
							"initialBet()": "1d73c64c",
							"outcome()": "27793f87",
							"paid()": "295b4e17",
							"playerChoice()": "adef7cdd",
							"playerChooses(uint256)": "e92788d6",
							"playerPlayed()": "8e687aed",
							"randomNum()": "f630aa65",
							"register()": "1aa3a008",
							"reset_contract()": "4e22fb5b",
							"whoAmI()": "da91254c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"BET_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BET_MIN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getOutcome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"housePlayed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outcome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"playerChoice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"choice\",\"type\":\"uint256\"}],\"name\":\"playerChooses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"playerPlayed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reset_contract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whoAmI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"getContractBalance()\":{\"notice\":\"***********************************************************************\"}}}},\"settings\":{\"compilationTarget\":{\"Project-3/Starter code/Works_In_Progress/test_game.sol\":\"CoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Project-3/Starter code/Works_In_Progress/test_game.sol\":{\"keccak256\":\"0xcafc09571318c99a984dc5df0f0c0bd133e607728fbd5687267f7cc93d23d8b8\",\"urls\":[\"bzz-raw://3a1699196eb4304345f1ebbd2fbc2f6fb6698c899192b25b1c9d7bfa5669ae72\",\"dweb:/ipfs/QmXE1iLjBcNJkWRY5vF15oJ4r6RwaHknoubPc7FxWgLFkw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "Project-3/Starter code/Works_In_Progress/test_game.sol:CoinFlip",
								"label": "initialBet",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 11,
								"contract": "Project-3/Starter code/Works_In_Progress/test_game.sol:CoinFlip",
								"label": "outcome",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 13,
								"contract": "Project-3/Starter code/Works_In_Progress/test_game.sol:CoinFlip",
								"label": "randomNum",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 16,
								"contract": "Project-3/Starter code/Works_In_Progress/test_game.sol:CoinFlip",
								"label": "housePlayed",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 19,
								"contract": "Project-3/Starter code/Works_In_Progress/test_game.sol:CoinFlip",
								"label": "playerPlayed",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 22,
								"contract": "Project-3/Starter code/Works_In_Progress/test_game.sol:CoinFlip",
								"label": "playerChoice",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "Project-3/Starter code/Works_In_Progress/test_game.sol:CoinFlip",
								"label": "paid",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "Project-3/Starter code/Works_In_Progress/test_game.sol:CoinFlip",
								"label": "playerA",
								"offset": 0,
								"slot": "7",
								"type": "t_address_payable"
							},
							{
								"astId": 29,
								"contract": "Project-3/Starter code/Works_In_Progress/test_game.sol:CoinFlip",
								"label": "HouseWallet",
								"offset": 0,
								"slot": "8",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"getContractBalance()": {
								"notice": "***********************************************************************"
							}
						}
					}
				}
			}
		},
		"sources": {
			"Project-3/Starter code/Works_In_Progress/test_game.sol": {
				"ast": {
					"absolutePath": "Project-3/Starter code/Works_In_Progress/test_game.sol",
					"exportedSymbols": {
						"CoinFlip": [
							394
						]
					},
					"id": 395,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "CoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"name": "BET_MIN",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "50:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "50:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "88:5:0",
										"subdenomination": "wei",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 7,
									"name": "BET_MAX",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "121:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "121:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "159:8:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"name": "initialBet",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "173:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "173:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"name": "outcome",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "251:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "251:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "randomNum",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "276:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "276:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 16,
									"name": "housePlayed",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "303:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "303:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "329:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "playerPlayed",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "336:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "336:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "363:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "playerChoice",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "370:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "370:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "397:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 25,
									"name": "paid",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "404:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 23,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "404:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 24,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "431:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"name": "playerA",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "466:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "466:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"name": "HouseWallet",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "495:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 28,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "495:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "853:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 32,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "871:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "871:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 34,
																"name": "BET_MIN",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "884:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "871:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															412,
															413
														],
														"referencedDeclaration": 412,
														"src": "863:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "863:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "863:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 39,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "910:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "910:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "BET_MAX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "923:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "910:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															412,
															413
														],
														"referencedDeclaration": 412,
														"src": "902:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "902:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "902:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 46,
																	"name": "initialBet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "949:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "963:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "949:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 49,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "968:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "968:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 51,
																	"name": "initialBet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "981:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "968:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "949:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															412,
															413
														],
														"referencedDeclaration": 412,
														"src": "941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "941:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "941:51:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1002:1:0"
											}
										]
									},
									"documentation": "***********************************************************************",
									"id": 58,
									"name": "validBet",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "850:2:0"
									},
									"src": "833:177:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "1048:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 61,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "1066:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1066:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "playerA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1080:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1066:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 60,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															412,
															413
														],
														"referencedDeclaration": 412,
														"src": "1058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1058:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1058:30:0"
											},
											{
												"id": 67,
												"nodeType": "PlaceholderStatement",
												"src": "1107:1:0"
											}
										]
									},
									"documentation": null,
									"id": 69,
									"name": "notAlreadyRegistered",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1045:2:0"
									},
									"src": "1016:99:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1187:354:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 76,
														"name": "HouseWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1210:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1233:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1225:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1210:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 91,
																"name": "playerA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1338:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307830",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1357:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1349:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1349:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1338:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 96,
																"name": "HouseWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1365:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307830",
																		"id": 98,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1388:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1380:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1380:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1365:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1338:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 117,
													"nodeType": "IfStatement",
													"src": "1333:183:0",
													"trueBody": {
														"id": 116,
														"nodeType": "Block",
														"src": "1395:121:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 102,
																		"name": "playerA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1409:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 103,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1422:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1422:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"src": "1409:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 106,
																"nodeType": "ExpressionStatement",
																"src": "1409:23:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 107,
																		"name": "initialBet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "1446:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 108,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1459:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1459:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1446:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 111,
																"nodeType": "ExpressionStatement",
																"src": "1446:22:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 112,
																		"name": "playerPlayed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "1482:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1497:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1482:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 115,
																"nodeType": "ExpressionStatement",
																"src": "1482:16:0"
															}
														]
													}
												},
												"id": 118,
												"nodeType": "IfStatement",
												"src": "1206:310:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "1239:79:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 81,
																	"name": "HouseWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1253:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 82,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "1267:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1267:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "1253:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 85,
															"nodeType": "ExpressionStatement",
															"src": "1253:24:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 86,
																	"name": "housePlayed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "1291:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1305:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1291:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "1291:15:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 72,
											"modifierName": {
												"argumentTypes": null,
												"id": 71,
												"name": "validBet",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1157:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1157:8:0"
										},
										{
											"arguments": null,
											"id": 74,
											"modifierName": {
												"argumentTypes": null,
												"id": 73,
												"name": "notAlreadyRegistered",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 69,
												"src": "1166:20:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1166:20:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:0:0"
									},
									"scope": 394,
									"src": "1122:419:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1828:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 123,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "1855:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1855:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 125,
																"name": "playerA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1855:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															412,
															413
														],
														"referencedDeclaration": 412,
														"src": "1847:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "1847:30:0"
											},
											{
												"id": 129,
												"nodeType": "PlaceholderStatement",
												"src": "1887:1:0"
											}
										]
									},
									"documentation": "***********************************************************************",
									"id": 131,
									"name": "is_caller_player",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:2:0"
									},
									"src": "1800:95:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1937:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 136,
																"name": "choice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "1964:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1973:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1964:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															412,
															413
														],
														"referencedDeclaration": 412,
														"src": "1956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1956:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "1956:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 142,
																"name": "choice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "1993:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "33",
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2002:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "1993:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															412,
															413
														],
														"referencedDeclaration": 412,
														"src": "1985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1985:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1985:19:0"
											},
											{
												"id": 147,
												"nodeType": "PlaceholderStatement",
												"src": "2014:1:0"
											}
										]
									},
									"documentation": null,
									"id": 149,
									"name": "is_legal_play",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"name": "choice",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1924:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1923:13:0"
									},
									"src": "1901:121:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "2061:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 152,
																"name": "playerChoice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2088:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2103:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2088:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															412,
															413
														],
														"referencedDeclaration": 412,
														"src": "2080:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2080:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "2080:25:0"
											},
											{
												"id": 157,
												"nodeType": "PlaceholderStatement",
												"src": "2115:1:0"
											}
										]
									},
									"documentation": null,
									"id": 159,
									"name": "player_never_played",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2061:0:0"
									},
									"src": "2032:91:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "2231:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 171,
														"name": "playerChoice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2242:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 172,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "2257:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2242:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "2242:21:0"
											}
										]
									},
									"documentation": null,
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 164,
											"modifierName": {
												"argumentTypes": null,
												"id": 163,
												"name": "player_never_played",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 159,
												"src": "2172:19:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2172:19:0"
										},
										{
											"arguments": null,
											"id": 166,
											"modifierName": {
												"argumentTypes": null,
												"id": 165,
												"name": "is_caller_player",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 131,
												"src": "2192:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2192:16:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 168,
													"name": "choice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 161,
													"src": "2223:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 169,
											"modifierName": {
												"argumentTypes": null,
												"id": 167,
												"name": "is_legal_play",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 149,
												"src": "2209:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2209:21:0"
										}
									],
									"name": "playerChooses",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"name": "choice",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "2152:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2152:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2151:13:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2231:0:0"
									},
									"scope": 394,
									"src": "2129:142:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "2304:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 179,
																"name": "playerChoice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2331:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2346:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2331:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															412,
															413
														],
														"referencedDeclaration": 412,
														"src": "2323:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2323:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "2323:25:0"
											},
											{
												"id": 184,
												"nodeType": "PlaceholderStatement",
												"src": "2358:1:0"
											}
										]
									},
									"documentation": null,
									"id": 186,
									"name": "has_player_played",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2304:0:0"
									},
									"src": "2277:89:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "2434:932:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 193,
														"name": "randomNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2458:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 196,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 399,
																					"src": "2485:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "number",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2485:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2498:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2485:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 195,
																		"name": "blockhash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "2475:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (uint256) view returns (bytes32)"
																		}
																	},
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2475:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2470:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2470:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "393939393939",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2504:6:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_999999_by_1",
																"typeString": "int_const 999999"
															},
															"value": "999999"
														},
														"src": "2470:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2458:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "2458:52:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 206,
															"name": "randomNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "2534:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2534:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2551:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2534:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 237,
												"nodeType": "IfStatement",
												"src": "2530:259:0",
												"trueBody": {
													"id": 236,
													"nodeType": "Block",
													"src": "2554:235:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 211,
																	"name": "outcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2581:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2591:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2581:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 214,
															"nodeType": "ExpressionStatement",
															"src": "2581:11:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 215,
																	"name": "playerChoice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "2610:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2626:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2610:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 235,
															"nodeType": "IfStatement",
															"src": "2606:172:0",
															"trueBody": {
																"id": 234,
																"nodeType": "Block",
																"src": "2629:149:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 218,
																				"name": "paid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 25,
																				"src": "2648:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2655:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2648:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 221,
																		"nodeType": "ExpressionStatement",
																		"src": "2648:8:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 226,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 423,
																								"src": "2711:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_CoinFlip_$394",
																									"typeString": "contract CoinFlip"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_CoinFlip_$394",
																									"typeString": "contract CoinFlip"
																								}
																							],
																							"id": 225,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2703:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": "address"
																						},
																						"id": 227,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2703:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 228,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "2703:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 222,
																					"name": "playerA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 27,
																					"src": "2686:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2686:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2686:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 230,
																		"nodeType": "ExpressionStatement",
																		"src": "2686:39:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 231,
																				"name": "reset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 320,
																				"src": "2743:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2743:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 233,
																		"nodeType": "ExpressionStatement",
																		"src": "2743:7:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 238,
															"name": "randomNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "2803:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2815:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2803:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2820:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2803:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 269,
												"nodeType": "IfStatement",
												"src": "2799:319:0",
												"trueBody": {
													"id": 268,
													"nodeType": "Block",
													"src": "2823:295:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 243,
																	"name": "outcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2838:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2848:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2838:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 246,
															"nodeType": "ExpressionStatement",
															"src": "2838:11:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 247,
																	"name": "playerChoice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "2867:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2883:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2867:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 267,
															"nodeType": "IfStatement",
															"src": "2863:244:0",
															"trueBody": {
																"id": 266,
																"nodeType": "Block",
																"src": "2886:221:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 250,
																				"name": "paid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 25,
																				"src": "2905:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2912:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2905:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 253,
																		"nodeType": "ExpressionStatement",
																		"src": "2905:8:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 258,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 423,
																								"src": "3040:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_CoinFlip_$394",
																									"typeString": "contract CoinFlip"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_CoinFlip_$394",
																									"typeString": "contract CoinFlip"
																								}
																							],
																							"id": 257,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3032:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": "address"
																						},
																						"id": 259,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3032:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 260,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "3032:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 254,
																					"name": "playerA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 27,
																					"src": "3015:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3015:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3015:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 262,
																		"nodeType": "ExpressionStatement",
																		"src": "3015:39:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 263,
																				"name": "reset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 320,
																				"src": "3072:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3072:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 265,
																		"nodeType": "ExpressionStatement",
																		"src": "3072:7:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 270,
														"name": "paid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3144:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3152:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3144:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 286,
												"nodeType": "IfStatement",
												"src": "3140:211:0",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "3155:196:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 277,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 423,
																					"src": "3292:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_CoinFlip_$394",
																						"typeString": "contract CoinFlip"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_CoinFlip_$394",
																						"typeString": "contract CoinFlip"
																					}
																				],
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3284:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3284:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3284:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 273,
																		"name": "HouseWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "3263:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3263:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3263:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 281,
															"nodeType": "ExpressionStatement",
															"src": "3263:43:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 282,
																	"name": "reset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "3320:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3320:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "3320:7:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 189,
											"modifierName": {
												"argumentTypes": null,
												"id": 188,
												"name": "has_player_played",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 186,
												"src": "2401:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2401:17:0"
										}
									],
									"name": "getOutcome",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:2:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2428:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2428:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2427:6:0"
									},
									"scope": 394,
									"src": "2372:994:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "3425:220:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 291,
														"name": "initialBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "3444:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3462:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3444:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "3444:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 295,
														"name": "playerA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3499:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3491:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3491:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3473:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "3473:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 301,
														"name": "HouseWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "3513:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3539:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3531:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3531:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3513:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "3513:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 307,
														"name": "housePlayed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "3553:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3571:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3553:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "3553:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 311,
														"name": "playerPlayed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "3582:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3600:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3582:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "3582:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 315,
														"name": "playerChoice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "3611:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3629:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3611:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "3611:19:0"
											}
										]
									},
									"documentation": null,
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3414:2:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3425:0:0"
									},
									"scope": 394,
									"src": "3400:245:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "3985:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 326,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "4010:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CoinFlip_$394",
																	"typeString": "contract CoinFlip"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_CoinFlip_$394",
																	"typeString": "contract CoinFlip"
																}
															],
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4002:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4002:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4002:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 324,
												"id": 329,
												"nodeType": "Return",
												"src": "3995:28:0"
											}
										]
									},
									"documentation": "***********************************************************************",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3955:2:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "3979:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3978:6:0"
									},
									"scope": 394,
									"src": "3928:102:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4107:141:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 336,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "4121:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4121:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 338,
														"name": "playerA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "4135:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4121:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 343,
												"nodeType": "IfStatement",
												"src": "4117:60:0",
												"trueBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "4144:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4165:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 335,
															"id": 341,
															"nodeType": "Return",
															"src": "4158:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 344,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "4182:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4182:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 346,
														"name": "HouseWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4196:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4182:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4178:64:0",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4209:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4230:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 335,
															"id": 349,
															"nodeType": "Return",
															"src": "4223:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "whoAmI",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4077:2:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4101:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4100:6:0"
									},
									"scope": 394,
									"src": "4062:186:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "4283:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 356,
																"name": "outcome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "4301:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4311:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4301:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															412,
															413
														],
														"referencedDeclaration": 412,
														"src": "4293:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4293:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "4293:20:0"
											},
											{
												"id": 361,
												"nodeType": "PlaceholderStatement",
												"src": "4323:1:0"
											}
										]
									},
									"documentation": null,
									"id": 363,
									"name": "game_has_outcome",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4280:2:0"
									},
									"src": "4255:76:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "4387:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 368,
														"name": "initialBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "4398:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4416:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4398:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "4398:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 372,
														"name": "playerA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "4427:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4453:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4445:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4445:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4427:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "4427:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 378,
														"name": "HouseWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4467:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4493:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4485:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4467:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "4467:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 384,
														"name": "outcome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4507:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4525:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4507:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "4507:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 388,
														"name": "paid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "4536:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4554:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4536:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "4536:19:0"
											}
										]
									},
									"documentation": null,
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 366,
											"modifierName": {
												"argumentTypes": null,
												"id": 365,
												"name": "game_has_outcome",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 363,
												"src": "4370:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4370:16:0"
										}
									],
									"name": "reset_contract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4360:2:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4387:0:0"
									},
									"scope": 394,
									"src": "4337:227:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 395,
							"src": "25:4541:0"
						}
					],
					"src": "0:4569:0"
				},
				"id": 0
			}
		}
	}
}