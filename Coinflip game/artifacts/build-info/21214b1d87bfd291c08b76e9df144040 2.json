{
	"id": "21214b1d87bfd291c08b76e9df144040",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol": {
				"content": "pragma solidity ^0.5.1;\ncontract CoinFlip {\n    uint constant public BET_MIN        = 1 wei;    // The minimum bet\n    uint constant public BET_MAX        = 10 ether;\n    uint public initialBet;                            // Bet of first player\n    uint public outcome;\n    uint public randomNum;\n    uint public housePlayed = 0;\n    uint public playerPlayed = 0;\n    uint public playerChoice = 0;\n    uint public paid         = 0;\n    // Players' addresses\n    address payable playerA;\n    address payable HouseWallet; // = 0x10b21F7DC7d6BDB16660D827442c7edb3d2523eA; //\n    \n    /**************************************************************************/\n    /*************************** Player Registration **************************/\n    /**************************************************************************/\n    modifier validBet() {\n        require(msg.value >= BET_MIN);\n        require(msg.value <= BET_MAX);\n        require(initialBet == 0 || msg.value >= initialBet);\n        _;\n    }\n    modifier notAlreadyRegistered() {\n        require(msg.sender != playerA);\n        \n        _;\n    }\n    function register() public payable validBet notAlreadyRegistered {\n        \n        if (HouseWallet == address(0x0)) {\n            HouseWallet = msg.sender;\n            housePlayed = msg.value;\n        }\n        else if ( playerA == address(0x0) && HouseWallet != address(0x0) ) {\n            playerA    = msg.sender;\n            initialBet = msg.value;\n            playerPlayed = msg.value;\n      \n        }\n        \n        \n    }\n    /**************************************************************************/\n    /****************************** RESULT PHASE ******************************/\n    /**************************************************************************/\n    \n    \n    modifier is_caller_player() {\n        \n        require(msg.sender == playerA);\n        _;\n    }\n    modifier is_legal_play(uint choice) {\n        \n        require(choice > 0);\n        require(choice < 3);\n        _;\n    }\n    modifier player_never_played {\n        \n        require(playerChoice < 1);\n        _;\n    }\n    function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {\n        playerChoice = choice;\n    }\n    modifier has_player_played {\n        \n        require(playerChoice > 0);\n        _;\n    }\n    function getOutcome() public has_player_played returns (uint) {\n    \n        \n        randomNum = uint(blockhash(block.number-1)) % 999999;\n        \n        if (randomNum % 2 == 0) {\n            \n            outcome = 2;\n            if (playerChoice == 2) {\n                paid = 1;            \n                playerA.transfer(address(this).balance);\n                reset();\n            \n            }\n        }\n        if (randomNum % 2 == 1) {\n            outcome = 1;\n            if (playerChoice == 1) {\n                paid = 1;\n                //reset();  // Reset game before paying to avoid reentrancy attacks\n                playerA.transfer(address(this).balance);\n                reset();\n            \n            }\n        }\n            \n        if (paid == 0) {\n            \n            //reset();  // Reset game before paying to avoid reentrancy attacks\n            HouseWallet.transfer(address(this).balance);\n            reset();\n           \n        }\n        \n    }\n    \n    // Reset the game.\n    function reset() private {\n        \n        initialBet      = 0;\n        playerA         = address(0x0);\n        HouseWallet     = address(0x0);\n        housePlayed     = 0;\n        playerPlayed    = 0;\n        playerChoice    = 0;\n       \n    }\n    /**************************************************************************/\n    /**************************** HELPER FUNCTIONS ****************************/\n    /**************************************************************************/\n    // Return contract balance\n    function getContractBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n    // Return player's ID\n    function whoAmI() public view returns (uint) {\n        if (msg.sender == playerA) {\n            return 1;\n        } if (msg.sender == HouseWallet) {\n            return 0;\n        }\n    }\n    modifier game_has_outcome() {\n        require(outcome > 0);\n        _;\n    }\n    function reset_contract() public game_has_outcome {\n        initialBet      = 0;\n        playerA         = address(0x0);\n        HouseWallet     = address(0x0);\n        outcome         = 0;\n        paid            = 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol": {
				"CoinFlip": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "BET_MAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "BET_MIN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getOutcome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "housePlayed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "initialBet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "outcome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "playerChoice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "choice",
									"type": "uint256"
								}
							],
							"name": "playerChooses",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "playerPlayed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "randomNum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "register",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "reset_contract",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "whoAmI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":24:4534  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":327:328  0 */\n  0x00\n    /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":301:328  uint public housePlayed = 0 */\n  0x03\n  sstore\n    /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":361:362  0 */\n  0x00\n    /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":334:362  uint public playerPlayed = 0 */\n  0x04\n  sstore\n    /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":395:396  0 */\n  0x00\n    /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":368:396  uint public playerChoice = 0 */\n  0x05\n  sstore\n    /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":429:430  0 */\n  0x00\n    /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":402:430  uint public paid         = 0 */\n  0x06\n  sstore\n    /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":24:4534  contract CoinFlip {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":24:4534  contract CoinFlip {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":24:4534  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e7e4b47\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xda91254c\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xda91254c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe92788d6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf630aa65\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfc98f42e\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x7e7e4b47\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8e687aed\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xadef7cdd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd0017a0c\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x27793f87\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x27793f87\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x295b4e17\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4e22fb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6f9fb98a\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x1aa3a008\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1d73c64c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2626ab08\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1110:1542  function register() public payable validBet notAlreadyRegistered {... */\n    tag_2:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":171:193  uint public initialBet */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":171:193  uint public initialBet */\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":48:91  uint constant public BET_MIN        = 1 wei */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":48:91  uint constant public BET_MIN        = 1 wei */\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":249:268  uint public outcome */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":249:268  uint public outcome */\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":402:430  uint public paid         = 0 */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":402:430  uint public paid         = 0 */\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4308:4532  function reset_contract() public game_has_outcome {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4308:4532  function reset_contract() public game_has_outcome {... */\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3903:4005  function getContractBalance() public view returns (uint) {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3903:4005  function getContractBalance() public view returns (uint) {... */\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2361:3346  function getOutcome() public has_player_played returns (uint) {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2361:3346  function getOutcome() public has_player_played returns (uint) {... */\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":334:362  uint public playerPlayed = 0 */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":334:362  uint public playerPlayed = 0 */\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":368:396  uint public playerChoice = 0 */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":368:396  uint public playerChoice = 0 */\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":119:165  uint constant public BET_MAX        = 10 ether */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":119:165  uint constant public BET_MAX        = 10 ether */\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4036:4222  function whoAmI() public view returns (uint) {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4036:4222  function whoAmI() public view returns (uint) {... */\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2122:2262  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2122:2262  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2122:2262  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":274:295  uint public randomNum */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_59:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":274:295  uint public randomNum */\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":301:328  uint public housePlayed = 0 */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_62:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":301:328  uint public housePlayed = 0 */\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1110:1542  function register() public payable validBet notAlreadyRegistered {... */\n    tag_21:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":86:91  1 wei */\n      0x01\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":862:871  msg.value */\n      callvalue\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":862:882  msg.value >= BET_MIN */\n      lt\n      iszero\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":854:883  require(msg.value >= BET_MIN) */\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":157:165  10 ether */\n      0x8ac7230489e80000\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":901:910  msg.value */\n      callvalue\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":901:921  msg.value <= BET_MAX */\n      gt\n      iszero\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":893:922  require(msg.value <= BET_MAX) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":954:955  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":940:950  initialBet */\n      dup1\n      sload\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":940:955  initialBet == 0 */\n      eq\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":940:982  initialBet == 0 || msg.value >= initialBet */\n      dup1\n      tag_68\n      jumpi\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":972:982  initialBet */\n      sload(0x00)\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":959:968  msg.value */\n      callvalue\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":959:982  msg.value >= initialBet */\n      lt\n      iszero\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":940:982  initialBet == 0 || msg.value >= initialBet */\n    tag_68:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":932:983  require(initialBet == 0 || msg.value >= initialBet) */\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1070:1077  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1056:1077  msg.sender != playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1056:1066  msg.sender */\n      caller\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1056:1077  msg.sender != playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1048:1078  require(msg.sender != playerA) */\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1221:1224  0x0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1198:1225  HouseWallet == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1198:1209  HouseWallet */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1198:1225  HouseWallet == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1194:1518  if (HouseWallet == address(0x0)) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1255:1265  msg.sender */\n      caller\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1241:1252  HouseWallet */\n      0x08\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1241:1265  HouseWallet = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1293:1302  msg.value */\n      callvalue\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1279:1290  housePlayed */\n      0x03\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1279:1302  housePlayed = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1194:1518  if (HouseWallet == address(0x0)) {... */\n      jump(tag_74)\n    tag_73:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1351:1354  0x0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1332:1355  playerA == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1332:1339  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1332:1355  playerA == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1332:1386  playerA == address(0x0) && HouseWallet != address(0x0) */\n      dup1\n      iszero\n      tag_75\n      jumpi\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1382:1385  0x0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1359:1386  HouseWallet != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1359:1370  HouseWallet */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1359:1386  HouseWallet != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1332:1386  playerA == address(0x0) && HouseWallet != address(0x0) */\n    tag_75:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1327:1518  if ( playerA == address(0x0) && HouseWallet != address(0x0) ) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1416:1426  msg.sender */\n      caller\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1403:1410  playerA */\n      0x07\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1403:1426  playerA    = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1453:1462  msg.value */\n      callvalue\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1440:1450  initialBet */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1440:1462  initialBet = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1491:1500  msg.value */\n      callvalue\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1476:1488  playerPlayed */\n      0x04\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1476:1500  playerPlayed = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1327:1518  if ( playerA == address(0x0) && HouseWallet != address(0x0) ) {... */\n    tag_76:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1194:1518  if (HouseWallet == address(0x0)) {... */\n    tag_74:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1110:1542  function register() public payable validBet notAlreadyRegistered {... */\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":171:193  uint public initialBet */\n    tag_24:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":48:91  uint constant public BET_MIN        = 1 wei */\n    tag_27:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":86:91  1 wei */\n      0x01\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":48:91  uint constant public BET_MIN        = 1 wei */\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":249:268  uint public outcome */\n    tag_30:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":402:430  uint public paid         = 0 */\n    tag_33:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4308:4532  function reset_contract() public game_has_outcome {... */\n    tag_36:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4283:4284  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4273:4280  outcome */\n      sload(0x01)\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4273:4284  outcome > 0 */\n      gt\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4265:4285  require(outcome > 0) */\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4386:4387  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4368:4378  initialBet */\n      dup1\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4368:4387  initialBet      = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4423:4426  0x0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4397:4404  playerA */\n      0x07\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4397:4427  playerA         = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4463:4466  0x0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4437:4448  HouseWallet */\n      0x08\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4437:4467  HouseWallet     = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4495:4496  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4477:4484  outcome */\n      0x01\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4477:4496  outcome         = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4524:4525  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4506:4510  paid */\n      0x06\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4506:4525  paid            = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4308:4532  function reset_contract() public game_has_outcome {... */\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3903:4005  function getContractBalance() public view returns (uint) {... */\n    tag_39:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3954:3958  uint */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3977:3998  address(this).balance */\n      selfbalance\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3970:3998  return address(this).balance */\n      swap1\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3903:4005  function getContractBalance() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2361:3346  function getOutcome() public has_player_played returns (uint) {... */\n    tag_42:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2417:2421  uint */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2336:2337  0 */\n      dup1\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2321:2333  playerChoice */\n      sload(0x05)\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2321:2337  playerChoice > 0 */\n      gt\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2313:2338  require(playerChoice > 0) */\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2493:2499  999999 */\n      0x0f423f\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2487:2488  1 */\n      0x01\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2474:2486  block.number */\n      number\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2474:2488  block.number-1 */\n      sub\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2464:2489  blockhash(block.number-1) */\n      blockhash\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2459:2490  uint(blockhash(block.number-1)) */\n      0x00\n      shr\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2459:2499  uint(blockhash(block.number-1)) % 999999 */\n      dup2\n      tag_84\n      jumpi\n      invalid\n    tag_84:\n      mod\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2447:2456  randomNum */\n      0x02\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2447:2499  randomNum = uint(blockhash(block.number-1)) % 999999 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2539:2540  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2534:2535  2 */\n      0x02\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2522:2531  randomNum */\n      dup1\n      sload\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2522:2535  randomNum % 2 */\n      dup2\n      tag_85\n      jumpi\n      invalid\n    tag_85:\n      mod\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2522:2540  randomNum % 2 == 0 */\n      eq\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2518:2775  if (randomNum % 2 == 0) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2579:2580  2 */\n      0x02\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2569:2576  outcome */\n      0x01\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2569:2580  outcome = 2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2614:2615  2 */\n      0x02\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2598:2610  playerChoice */\n      sload(0x05)\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2598:2615  playerChoice == 2 */\n      eq\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2594:2765  if (playerChoice == 2) {... */\n      iszero\n      tag_87\n      jumpi\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2642:2643  1 */\n      0x01\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2635:2639  paid */\n      0x06\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2635:2643  paid = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2673:2680  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2673:2689  playerA.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2673:2712  playerA.transfer(address(this).balance) */\n      0x08fc\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2690:2711  address(this).balance */\n      selfbalance\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2673:2712  playerA.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_88:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2673:2712  playerA.transfer(address(this).balance) */\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2730:2737  reset() */\n      tag_89\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2730:2735  reset */\n      tag_90\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2730:2737  reset() */\n      jump\t// in\n    tag_89:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2594:2765  if (playerChoice == 2) {... */\n    tag_87:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2518:2775  if (randomNum % 2 == 0) {... */\n    tag_86:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2805:2806  1 */\n      0x01\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2800:2801  2 */\n      0x02\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2788:2797  randomNum */\n      dup1\n      sload\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2788:2801  randomNum % 2 */\n      dup2\n      tag_91\n      jumpi\n      invalid\n    tag_91:\n      mod\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2788:2806  randomNum % 2 == 1 */\n      eq\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2784:3100  if (randomNum % 2 == 1) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2832:2833  1 */\n      0x01\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2822:2829  outcome */\n      dup1\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2822:2833  outcome = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2867:2868  1 */\n      0x01\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2851:2863  playerChoice */\n      sload(0x05)\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2851:2868  playerChoice == 1 */\n      eq\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2847:3090  if (playerChoice == 1) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2895:2896  1 */\n      0x01\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2888:2892  paid */\n      0x06\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2888:2896  paid = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2998:3005  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2998:3014  playerA.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2998:3037  playerA.transfer(address(this).balance) */\n      0x08fc\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3015:3036  address(this).balance */\n      selfbalance\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2998:3037  playerA.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_94:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2998:3037  playerA.transfer(address(this).balance) */\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3055:3062  reset() */\n      tag_95\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3055:3060  reset */\n      tag_90\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3055:3062  reset() */\n      jump\t// in\n    tag_95:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2847:3090  if (playerChoice == 1) {... */\n    tag_93:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2784:3100  if (randomNum % 2 == 1) {... */\n    tag_92:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3134:3135  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3126:3130  paid */\n      sload(0x06)\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3126:3135  paid == 0 */\n      eq\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3122:3331  if (paid == 0) {... */\n      iszero\n      tag_96\n      jumpi\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3244:3255  HouseWallet */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3244:3264  HouseWallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3244:3287  HouseWallet.transfer(address(this).balance) */\n      0x08fc\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3265:3286  address(this).balance */\n      selfbalance\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3244:3287  HouseWallet.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_97:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3244:3287  HouseWallet.transfer(address(this).balance) */\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3301:3308  reset() */\n      tag_98\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3301:3306  reset */\n      tag_90\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3301:3308  reset() */\n      jump\t// in\n    tag_98:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3122:3331  if (paid == 0) {... */\n    tag_96:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2361:3346  function getOutcome() public has_player_played returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":334:362  uint public playerPlayed = 0 */\n    tag_45:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":368:396  uint public playerChoice = 0 */\n    tag_48:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":119:165  uint constant public BET_MAX        = 10 ether */\n    tag_51:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":157:165  10 ether */\n      0x8ac7230489e80000\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":119:165  uint constant public BET_MAX        = 10 ether */\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4036:4222  function whoAmI() public view returns (uint) {... */\n    tag_54:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4075:4079  uint */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4109:4116  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4095:4116  msg.sender == playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4095:4105  msg.sender */\n      caller\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4095:4116  msg.sender == playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4091:4151  if (msg.sender == playerA) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4139:4140  1 */\n      0x01\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4132:4140  return 1 */\n      swap1\n      pop\n      jump(tag_99)\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4091:4151  if (msg.sender == playerA) {... */\n    tag_100:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4170:4181  HouseWallet */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4156:4181  msg.sender == HouseWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4156:4166  msg.sender */\n      caller\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4156:4181  msg.sender == HouseWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4152:4216  if (msg.sender == HouseWallet) {... */\n      iszero\n      tag_101\n      jumpi\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4204:4205  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4197:4205  return 0 */\n      swap1\n      pop\n      jump(tag_99)\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4152:4216  if (msg.sender == HouseWallet) {... */\n    tag_101:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":4036:4222  function whoAmI() public view returns (uint) {... */\n    tag_99:\n      swap1\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2122:2262  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n    tag_58:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2097:2098  1 */\n      0x01\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2082:2094  playerChoice */\n      sload(0x05)\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2082:2098  playerChoice < 1 */\n      lt\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2074:2099  require(playerChoice < 1) */\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1869:1876  playerA */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1855:1876  msg.sender == playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1855:1865  msg.sender */\n      caller\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1855:1876  msg.sender == playerA */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1847:1877  require(msg.sender == playerA) */\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2216:2222  choice */\n      dup1\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1972:1973  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1963:1969  choice */\n      dup2\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1963:1973  choice > 0 */\n      gt\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1955:1974  require(choice > 0) */\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2001:2002  3 */\n      0x03\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1992:1998  choice */\n      dup2\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1992:2002  choice < 3 */\n      lt\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1984:2003  require(choice < 3) */\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2249:2255  choice */\n      dup2\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2234:2246  playerChoice */\n      0x05\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2234:2255  playerChoice = choice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":1887:1888  _ */\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":2122:2262  function playerChooses(uint choice) public player_never_played is_caller_player is_legal_play(choice) {... */\n      pop\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":274:295  uint public randomNum */\n    tag_61:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":301:328  uint public housePlayed = 0 */\n    tag_64:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3379:3624  function reset() private {... */\n    tag_90:\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3441:3442  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3423:3433  initialBet */\n      dup1\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3423:3442  initialBet      = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3478:3481  0x0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3452:3459  playerA */\n      0x07\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3452:3482  playerA         = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3518:3521  0x0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3492:3503  HouseWallet */\n      0x08\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3492:3522  HouseWallet     = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3550:3551  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3532:3543  housePlayed */\n      0x03\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3532:3551  housePlayed     = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3579:3580  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3561:3573  playerPlayed */\n      0x04\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3561:3580  playerPlayed    = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3608:3609  0 */\n      0x00\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3590:3602  playerChoice */\n      0x05\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3590:3609  playerChoice    = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":3379:3624  function reset() private {... */\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158206b46e949aa5ad311773e68218b9c5a1cb928c8a4fa97af4bbbc8af4147a825a864736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600060035560006004556000600555600060065534801561002457600080fd5b50610a98806100346000396000f3fe6080604052600436106100e85760003560e01c80637e7e4b471161008a578063da91254c11610059578063da91254c14610291578063e92788d6146102bc578063f630aa65146102f7578063fc98f42e14610322576100e8565b80637e7e4b47146101e55780638e687aed14610210578063adef7cdd1461023b578063d0017a0c14610266576100e8565b806327793f87116100c657806327793f871461014d578063295b4e17146101785780634e22fb5b146101a35780636f9fb98a146101ba576100e8565b80631aa3a008146100ed5780631d73c64c146100f75780632626ab0814610122575b600080fd5b6100f561034d565b005b34801561010357600080fd5b5061010c61058f565b6040518082815260200191505060405180910390f35b34801561012e57600080fd5b50610137610595565b6040518082815260200191505060405180910390f35b34801561015957600080fd5b5061016261059a565b6040518082815260200191505060405180910390f35b34801561018457600080fd5b5061018d6105a0565b6040518082815260200191505060405180910390f35b3480156101af57600080fd5b506101b86105a6565b005b3480156101c657600080fd5b506101cf610652565b6040518082815260200191505060405180910390f35b3480156101f157600080fd5b506101fa61065a565b6040518082815260200191505060405180910390f35b34801561021c57600080fd5b50610225610847565b6040518082815260200191505060405180910390f35b34801561024757600080fd5b5061025061084d565b6040518082815260200191505060405180910390f35b34801561027257600080fd5b5061027b610853565b6040518082815260200191505060405180910390f35b34801561029d57600080fd5b506102a661085f565b6040518082815260200191505060405180910390f35b3480156102c857600080fd5b506102f5600480360360208110156102df57600080fd5b8101908080359060200190929190505050610923565b005b34801561030357600080fd5b5061030c6109b2565b6040518082815260200191505060405180910390f35b34801561032e57600080fd5b506103376109b8565b6040518082815260200191505060405180910390f35b600134101561035b57600080fd5b678ac7230489e8000034111561037057600080fd5b60008054148061038257506000543410155b61038b57600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103e657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561048a5733600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460038190555061058d565b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156105375750600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561058c5733600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600081905550346004819055505b5b565b60005481565b600181565b60015481565b60065481565b6000600154116105b557600080fd5b600080819055506000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001819055506000600681905550565b600047905090565b6000806005541161066a57600080fd5b620f423f600143034060001c8161067d57fe5b066002819055506000600280548161069157fe5b06141561072657600260018190555060026005541415610725576001600681905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561071b573d6000803e3d6000fd5b506107246109be565b5b5b6001600280548161073357fe5b0614156107c75760018081905550600160055414156107c6576001600681905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156107bc573d6000803e3d6000fd5b506107c56109be565b5b5b6000600654141561084457600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561083a573d6000803e3d6000fd5b506108436109be565b5b90565b60045481565b60055481565b678ac7230489e8000081565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108c05760019050610920565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561091f5760009050610920565b5b90565b60016005541061093257600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098c57600080fd5b806000811161099a57600080fd5b600381106109a757600080fd5b816005819055505050565b60025481565b60035481565b600080819055506000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006003819055506000600481905550600060058190555056fea265627a7a723158206b46e949aa5ad311773e68218b9c5a1cb928c8a4fa97af4bbbc8af4147a825a864736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA98 DUP1 PUSH2 0x34 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E7E4B47 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDA91254C GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDA91254C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xE92788D6 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF630AA65 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xFC98F42E EQ PUSH2 0x322 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x7E7E4B47 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x8E687AED EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xADEF7CDD EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xD0017A0C EQ PUSH2 0x266 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x27793F87 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x27793F87 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x295B4E17 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x4E22FB5B EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x1BA JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x1D73C64C EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2626AB08 EQ PUSH2 0x122 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH2 0x34D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x5A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x923 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 CALLVALUE LT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 CALLVALUE GT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD EQ DUP1 PUSH2 0x382 JUMPI POP PUSH1 0x0 SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x48A JUMPI CALLER PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x58D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x537 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x58C JUMPI CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD GT PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF423F PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0x0 SHR DUP2 PUSH2 0x67D JUMPI INVALID JUMPDEST MOD PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD DUP2 PUSH2 0x691 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x726 JUMPI PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x725 JUMPI PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x71B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x724 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD DUP2 PUSH2 0x733 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x7C5 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x844 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x843 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x920 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x920 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD LT PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 GT PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH12 0x46E949AA5AD311773E68218B SWAP13 GAS SHR 0xB9 0x28 0xC8 LOG4 STATICCALL SWAP8 0xAF 0x4B 0xBB 0xC8 0xAF COINBASE SELFBALANCE 0xA8 0x25 0xA8 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "24:4510:0:-;;;327:1;301:27;;361:1;334:28;;395:1;368:28;;429:1;402:28;;24:4510;8:9:-1;5:2;;;30:1;27;20:12;5:2;24:4510:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c80637e7e4b471161008a578063da91254c11610059578063da91254c14610291578063e92788d6146102bc578063f630aa65146102f7578063fc98f42e14610322576100e8565b80637e7e4b47146101e55780638e687aed14610210578063adef7cdd1461023b578063d0017a0c14610266576100e8565b806327793f87116100c657806327793f871461014d578063295b4e17146101785780634e22fb5b146101a35780636f9fb98a146101ba576100e8565b80631aa3a008146100ed5780631d73c64c146100f75780632626ab0814610122575b600080fd5b6100f561034d565b005b34801561010357600080fd5b5061010c61058f565b6040518082815260200191505060405180910390f35b34801561012e57600080fd5b50610137610595565b6040518082815260200191505060405180910390f35b34801561015957600080fd5b5061016261059a565b6040518082815260200191505060405180910390f35b34801561018457600080fd5b5061018d6105a0565b6040518082815260200191505060405180910390f35b3480156101af57600080fd5b506101b86105a6565b005b3480156101c657600080fd5b506101cf610652565b6040518082815260200191505060405180910390f35b3480156101f157600080fd5b506101fa61065a565b6040518082815260200191505060405180910390f35b34801561021c57600080fd5b50610225610847565b6040518082815260200191505060405180910390f35b34801561024757600080fd5b5061025061084d565b6040518082815260200191505060405180910390f35b34801561027257600080fd5b5061027b610853565b6040518082815260200191505060405180910390f35b34801561029d57600080fd5b506102a661085f565b6040518082815260200191505060405180910390f35b3480156102c857600080fd5b506102f5600480360360208110156102df57600080fd5b8101908080359060200190929190505050610923565b005b34801561030357600080fd5b5061030c6109b2565b6040518082815260200191505060405180910390f35b34801561032e57600080fd5b506103376109b8565b6040518082815260200191505060405180910390f35b600134101561035b57600080fd5b678ac7230489e8000034111561037057600080fd5b60008054148061038257506000543410155b61038b57600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103e657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561048a5733600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460038190555061058d565b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156105375750600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561058c5733600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600081905550346004819055505b5b565b60005481565b600181565b60015481565b60065481565b6000600154116105b557600080fd5b600080819055506000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001819055506000600681905550565b600047905090565b6000806005541161066a57600080fd5b620f423f600143034060001c8161067d57fe5b066002819055506000600280548161069157fe5b06141561072657600260018190555060026005541415610725576001600681905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561071b573d6000803e3d6000fd5b506107246109be565b5b5b6001600280548161073357fe5b0614156107c75760018081905550600160055414156107c6576001600681905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156107bc573d6000803e3d6000fd5b506107c56109be565b5b5b6000600654141561084457600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561083a573d6000803e3d6000fd5b506108436109be565b5b90565b60045481565b60055481565b678ac7230489e8000081565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108c05760019050610920565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561091f5760009050610920565b5b90565b60016005541061093257600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098c57600080fd5b806000811161099a57600080fd5b600381106109a757600080fd5b816005819055505050565b60025481565b60035481565b600080819055506000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006003819055506000600481905550600060058190555056fea265627a7a723158206b46e949aa5ad311773e68218b9c5a1cb928c8a4fa97af4bbbc8af4147a825a864736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E7E4B47 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDA91254C GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDA91254C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xE92788D6 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF630AA65 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xFC98F42E EQ PUSH2 0x322 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x7E7E4B47 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x8E687AED EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xADEF7CDD EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xD0017A0C EQ PUSH2 0x266 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x27793F87 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x27793F87 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x295B4E17 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x4E22FB5B EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x1BA JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x1D73C64C EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2626AB08 EQ PUSH2 0x122 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH2 0x34D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x5A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x923 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 CALLVALUE LT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 CALLVALUE GT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD EQ DUP1 PUSH2 0x382 JUMPI POP PUSH1 0x0 SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x48A JUMPI CALLER PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x58D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x537 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x58C JUMPI CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD GT PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF423F PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0x0 SHR DUP2 PUSH2 0x67D JUMPI INVALID JUMPDEST MOD PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD DUP2 PUSH2 0x691 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x726 JUMPI PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x725 JUMPI PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x71B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x724 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD DUP2 PUSH2 0x733 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x7C5 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x844 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x843 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x920 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x920 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD LT PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 GT PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH12 0x46E949AA5AD311773E68218B SWAP13 GAS SHR 0xB9 0x28 0xC8 LOG4 STATICCALL SWAP8 0xAF 0x4B 0xBB 0xC8 0xAF COINBASE SELFBALANCE 0xA8 0x25 0xA8 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "24:4510:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1110:432;;;:::i;:::-;;171:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;171:22:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;48:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48:43:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;249:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;249:19:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;402:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;402:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4308:224;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4308:224:0;;;:::i;:::-;;3903:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3903:102:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2361:985;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2361:985:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;334:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;368;;8:9:-1;5:2;;;30:1;27;20:12;5:2;368:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;119:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;119:46:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4036:186;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4036:186:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2122:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2122:140:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2122:140:0;;;;;;;;;;;;;;;;;:::i;:::-;;274:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;274:21:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;301:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:27:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1110:432;86:5;862:9;:20;;854:29;;;;;;157:8;901:9;:20;;893:29;;;;;;954:1;940:10;;:15;:42;;;;972:10;;959:9;:23;;940:42;932:51;;;;;;1070:7;;;;;;;;;;;1056:21;;:10;:21;;;;1048:30;;;;;;1221:3;1198:27;;:11;;;;;;;;;;;:27;;;1194:324;;;1255:10;1241:11;;:24;;;;;;;;;;;;;;;;;;1293:9;1279:11;:23;;;;1194:324;;;1351:3;1332:23;;:7;;;;;;;;;;;:23;;;:54;;;;;1382:3;1359:27;;:11;;;;;;;;;;;:27;;;;1332:54;1327:191;;;1416:10;1403:7;;:23;;;;;;;;;;;;;;;;;;1453:9;1440:10;:22;;;;1491:9;1476:12;:24;;;;1327:191;1194:324;1110:432::o;171:22::-;;;;:::o;48:43::-;86:5;48:43;:::o;249:19::-;;;;:::o;402:28::-;;;;:::o;4308:224::-;4283:1;4273:7;;:11;4265:20;;;;;;4386:1;4368:10;:19;;;;4423:3;4397:7;;:30;;;;;;;;;;;;;;;;;;4463:3;4437:11;;:30;;;;;;;;;;;;;;;;;;4495:1;4477:7;:19;;;;4524:1;4506:4;:19;;;;4308:224::o;3903:102::-;3954:4;3977:21;3970:28;;3903:102;:::o;2361:985::-;2417:4;2336:1;2321:12;;:16;2313:25;;;;;;2493:6;2487:1;2474:12;:14;2464:25;2459:31;;:40;;;;;;2447:9;:52;;;;2539:1;2534;2522:9;;:13;;;;;;:18;2518:257;;;2579:1;2569:7;:11;;;;2614:1;2598:12;;:17;2594:171;;;2642:1;2635:4;:8;;;;2673:7;;;;;;;;;;;:16;;:39;2690:21;2673:39;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2673:39:0;2730:7;:5;:7::i;:::-;2594:171;2518:257;2805:1;2800;2788:9;;:13;;;;;;:18;2784:316;;;2832:1;2822:7;:11;;;;2867:1;2851:12;;:17;2847:243;;;2895:1;2888:4;:8;;;;2998:7;;;;;;;;;;;:16;;:39;3015:21;2998:39;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2998:39:0;3055:7;:5;:7::i;:::-;2847:243;2784:316;3134:1;3126:4;;:9;3122:209;;;3244:11;;;;;;;;;;;:20;;:43;3265:21;3244:43;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3244:43:0;3301:7;:5;:7::i;:::-;3122:209;2361:985;:::o;334:28::-;;;;:::o;368:::-;;;;:::o;119:46::-;157:8;119:46;:::o;4036:186::-;4075:4;4109:7;;;;;;;;;;;4095:21;;:10;:21;;;4091:60;;;4139:1;4132:8;;;;4091:60;4170:11;;;;;;;;;;;4156:25;;:10;:25;;;4152:64;;;4204:1;4197:8;;;;4152:64;4036:186;;:::o;2122:140::-;2097:1;2082:12;;:16;2074:25;;;;;;1869:7;;;;;;;;;;;1855:21;;:10;:21;;;1847:30;;;;;;2216:6;1972:1;1963:6;:10;1955:19;;;;;;2001:1;1992:6;:10;1984:19;;;;;;2249:6;2234:12;:21;;;;1887:1;2122:140;:::o;274:21::-;;;;:::o;301:27::-;;;;:::o;3379:245::-;3441:1;3423:10;:19;;;;3478:3;3452:7;;:30;;;;;;;;;;;;;;;;;;3518:3;3492:11;;:30;;;;;;;;;;;;;;;;;;3550:1;3532:11;:19;;;;3579:1;3561:12;:19;;;;3608:1;3590:12;:19;;;;3379:245::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "542400",
								"executionCost": "20599",
								"totalCost": "562999"
							},
							"external": {
								"BET_MAX()": "294",
								"BET_MIN()": "273",
								"getContractBalance()": "304",
								"getOutcome()": "infinite",
								"housePlayed()": "1093",
								"initialBet()": "1051",
								"outcome()": "1028",
								"paid()": "1050",
								"playerChoice()": "1072",
								"playerChooses(uint256)": "22030",
								"playerPlayed()": "1050",
								"randomNum()": "1071",
								"register()": "66243",
								"reset_contract()": "57810",
								"whoAmI()": "1992"
							},
							"internal": {
								"reset()": "61799"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24,
									"end": 4534,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 24,
									"end": 4534,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 24,
									"end": 4534,
									"name": "MSTORE"
								},
								{
									"begin": 327,
									"end": 328,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 301,
									"end": 328,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 301,
									"end": 328,
									"name": "SSTORE"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 334,
									"end": 362,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 334,
									"end": 362,
									"name": "SSTORE"
								},
								{
									"begin": 395,
									"end": 396,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 368,
									"end": 396,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 368,
									"end": 396,
									"name": "SSTORE"
								},
								{
									"begin": 429,
									"end": 430,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 402,
									"end": 430,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 402,
									"end": 430,
									"name": "SSTORE"
								},
								{
									"begin": 24,
									"end": 4534,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 4534,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 4534,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 4534,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 4534,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 4534,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 4534,
									"name": "CODECOPY"
								},
								{
									"begin": 24,
									"end": 4534,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 4534,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158206b46e949aa5ad311773e68218b9c5a1cb928c8a4fa97af4bbbc8af4147a825a864736f6c63430005110032",
									".code": [
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "MSTORE"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "LT"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "SHR"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "7E7E4B47"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "GT"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "DA91254C"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "GT"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "DA91254C"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "E92788D6"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "F630AA65"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "FC98F42E"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMP"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPDEST"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "7E7E4B47"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "8E687AED"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "ADEF7CDD"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "D0017A0C"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMP"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPDEST"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "27793F87"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "GT"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "27793F87"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "295B4E17"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "4E22FB5B"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "6F9FB98A"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMP"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPDEST"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "1AA3A008"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "1D73C64C"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "2626AB08"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "JUMPDEST"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 4534,
											"name": "REVERT"
										},
										{
											"begin": 1110,
											"end": 1542,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1110,
											"end": 1542,
											"name": "JUMPDEST"
										},
										{
											"begin": 1110,
											"end": 1542,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1542,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1110,
											"end": 1542,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1110,
											"end": 1542,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1542,
											"name": "JUMPDEST"
										},
										{
											"begin": 1110,
											"end": 1542,
											"name": "STOP"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "JUMPDEST"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "POP"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "JUMPDEST"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "DUP1"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "DUP3"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "DUP2"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "MSTORE"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "ADD"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "SWAP2"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "POP"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "POP"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "DUP1"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "SWAP2"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "SUB"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "SWAP1"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "RETURN"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "JUMPDEST"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "POP"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "JUMPDEST"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "MLOAD"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "DUP3"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "DUP2"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "MSTORE"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "ADD"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "SWAP2"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "POP"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "POP"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "MLOAD"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "SWAP2"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "SUB"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "SWAP1"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "RETURN"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "JUMPDEST"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "JUMPDEST"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "MLOAD"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "DUP3"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "DUP2"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "MSTORE"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "ADD"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "SWAP2"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "MLOAD"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "SWAP2"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "SUB"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "SWAP1"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "RETURN"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "JUMPDEST"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "JUMPDEST"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "MLOAD"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "DUP3"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "DUP2"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "MSTORE"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "ADD"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "SWAP2"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "MLOAD"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "SWAP2"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "SUB"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "SWAP1"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "RETURN"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "JUMPDEST"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "POP"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "JUMPDEST"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "STOP"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "JUMPDEST"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "POP"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "JUMPDEST"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "MLOAD"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "DUP1"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "DUP3"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "DUP2"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "MSTORE"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "ADD"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "SWAP2"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "POP"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "POP"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "MLOAD"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "DUP1"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "SWAP2"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "SUB"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "SWAP1"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "RETURN"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "JUMPDEST"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "POP"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "JUMPDEST"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "MLOAD"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "DUP1"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "DUP3"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "DUP2"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "MSTORE"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "ADD"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "SWAP2"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "POP"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "POP"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "MLOAD"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "DUP1"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "SWAP2"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "SUB"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "SWAP1"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "RETURN"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "POP"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "MLOAD"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "DUP3"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "DUP2"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "MSTORE"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "ADD"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "SWAP2"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "POP"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "POP"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "MLOAD"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "SWAP2"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "SUB"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "SWAP1"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "RETURN"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "RETURN"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "JUMPDEST"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "POP"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "JUMPDEST"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "MLOAD"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "DUP3"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "DUP2"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "MSTORE"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "ADD"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "SWAP2"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "POP"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "POP"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "MLOAD"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "SWAP2"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "SUB"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "SWAP1"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "RETURN"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "JUMPDEST"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "POP"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "JUMPDEST"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "MLOAD"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "DUP1"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "DUP3"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "DUP2"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "MSTORE"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "ADD"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "SWAP2"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "POP"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "POP"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "MLOAD"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "DUP1"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "SWAP2"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "SUB"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "SWAP1"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "RETURN"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "JUMPDEST"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "POP"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "DUP1"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "DUP2"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "ADD"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "SWAP1"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "DUP1"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "DUP1"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "SWAP1"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "ADD"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "SWAP1"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "SWAP3"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "SWAP2"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "SWAP1"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "POP"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "POP"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "POP"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "JUMPDEST"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "STOP"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "MLOAD"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "MLOAD"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "SUB"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "RETURN"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "MLOAD"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "DUP3"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "DUP2"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "MSTORE"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "ADD"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "SWAP2"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "MLOAD"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "SWAP2"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "SUB"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "SWAP1"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "RETURN"
										},
										{
											"begin": 1110,
											"end": 1542,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1110,
											"end": 1542,
											"name": "JUMPDEST"
										},
										{
											"begin": 86,
											"end": 91,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "CALLVALUE"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "LT"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "ISZERO"
										},
										{
											"begin": 854,
											"end": 883,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 854,
											"end": 883,
											"name": "JUMPI"
										},
										{
											"begin": 854,
											"end": 883,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 854,
											"end": 883,
											"name": "DUP1"
										},
										{
											"begin": 854,
											"end": 883,
											"name": "REVERT"
										},
										{
											"begin": 854,
											"end": 883,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 854,
											"end": 883,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 165,
											"name": "PUSH",
											"value": "8AC7230489E80000"
										},
										{
											"begin": 901,
											"end": 910,
											"name": "CALLVALUE"
										},
										{
											"begin": 901,
											"end": 921,
											"name": "GT"
										},
										{
											"begin": 901,
											"end": 921,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 922,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 893,
											"end": 922,
											"name": "JUMPI"
										},
										{
											"begin": 893,
											"end": 922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 893,
											"end": 922,
											"name": "DUP1"
										},
										{
											"begin": 893,
											"end": 922,
											"name": "REVERT"
										},
										{
											"begin": 893,
											"end": 922,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 893,
											"end": 922,
											"name": "JUMPDEST"
										},
										{
											"begin": 954,
											"end": 955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 940,
											"end": 950,
											"name": "DUP1"
										},
										{
											"begin": 940,
											"end": 950,
											"name": "SLOAD"
										},
										{
											"begin": 940,
											"end": 955,
											"name": "EQ"
										},
										{
											"begin": 940,
											"end": 982,
											"name": "DUP1"
										},
										{
											"begin": 940,
											"end": 982,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 940,
											"end": 982,
											"name": "JUMPI"
										},
										{
											"begin": 940,
											"end": 982,
											"name": "POP"
										},
										{
											"begin": 972,
											"end": 982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 972,
											"end": 982,
											"name": "SLOAD"
										},
										{
											"begin": 959,
											"end": 968,
											"name": "CALLVALUE"
										},
										{
											"begin": 959,
											"end": 982,
											"name": "LT"
										},
										{
											"begin": 959,
											"end": 982,
											"name": "ISZERO"
										},
										{
											"begin": 940,
											"end": 982,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 940,
											"end": 982,
											"name": "JUMPDEST"
										},
										{
											"begin": 932,
											"end": 983,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 932,
											"end": 983,
											"name": "JUMPI"
										},
										{
											"begin": 932,
											"end": 983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 932,
											"end": 983,
											"name": "DUP1"
										},
										{
											"begin": 932,
											"end": 983,
											"name": "REVERT"
										},
										{
											"begin": 932,
											"end": 983,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 932,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "SLOAD"
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "EXP"
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "DIV"
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "AND"
										},
										{
											"begin": 1056,
											"end": 1077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1077,
											"name": "AND"
										},
										{
											"begin": 1056,
											"end": 1066,
											"name": "CALLER"
										},
										{
											"begin": 1056,
											"end": 1077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1077,
											"name": "AND"
										},
										{
											"begin": 1056,
											"end": 1077,
											"name": "EQ"
										},
										{
											"begin": 1056,
											"end": 1077,
											"name": "ISZERO"
										},
										{
											"begin": 1048,
											"end": 1078,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1048,
											"end": 1078,
											"name": "JUMPI"
										},
										{
											"begin": 1048,
											"end": 1078,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1078,
											"name": "DUP1"
										},
										{
											"begin": 1048,
											"end": 1078,
											"name": "REVERT"
										},
										{
											"begin": 1048,
											"end": 1078,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1048,
											"end": 1078,
											"name": "JUMPDEST"
										},
										{
											"begin": 1221,
											"end": 1224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1225,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1225,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "EXP"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "DIV"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1225,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1225,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1225,
											"name": "EQ"
										},
										{
											"begin": 1194,
											"end": 1518,
											"name": "ISZERO"
										},
										{
											"begin": 1194,
											"end": 1518,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1194,
											"end": 1518,
											"name": "JUMPI"
										},
										{
											"begin": 1255,
											"end": 1265,
											"name": "CALLER"
										},
										{
											"begin": 1241,
											"end": 1252,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1241,
											"end": 1252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "EXP"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "DUP2"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "SLOAD"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "DUP2"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "MUL"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "NOT"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "AND"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "SWAP1"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "DUP4"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "AND"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "MUL"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "OR"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "SWAP1"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "SSTORE"
										},
										{
											"begin": 1241,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1293,
											"end": 1302,
											"name": "CALLVALUE"
										},
										{
											"begin": 1279,
											"end": 1290,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1279,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1279,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1279,
											"end": 1302,
											"name": "SSTORE"
										},
										{
											"begin": 1279,
											"end": 1302,
											"name": "POP"
										},
										{
											"begin": 1194,
											"end": 1518,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1194,
											"end": 1518,
											"name": "JUMP"
										},
										{
											"begin": 1194,
											"end": 1518,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1194,
											"end": 1518,
											"name": "JUMPDEST"
										},
										{
											"begin": 1351,
											"end": 1354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1355,
											"name": "AND"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "SWAP1"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "SLOAD"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "SWAP1"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "EXP"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "SWAP1"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "DIV"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "AND"
										},
										{
											"begin": 1332,
											"end": 1355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1355,
											"name": "AND"
										},
										{
											"begin": 1332,
											"end": 1355,
											"name": "EQ"
										},
										{
											"begin": 1332,
											"end": 1386,
											"name": "DUP1"
										},
										{
											"begin": 1332,
											"end": 1386,
											"name": "ISZERO"
										},
										{
											"begin": 1332,
											"end": 1386,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1332,
											"end": 1386,
											"name": "JUMPI"
										},
										{
											"begin": 1332,
											"end": 1386,
											"name": "POP"
										},
										{
											"begin": 1382,
											"end": 1385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1386,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1359,
											"end": 1386,
											"name": "AND"
										},
										{
											"begin": 1359,
											"end": 1370,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1359,
											"end": 1370,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1370,
											"name": "SWAP1"
										},
										{
											"begin": 1359,
											"end": 1370,
											"name": "SLOAD"
										},
										{
											"begin": 1359,
											"end": 1370,
											"name": "SWAP1"
										},
										{
											"begin": 1359,
											"end": 1370,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1359,
											"end": 1370,
											"name": "EXP"
										},
										{
											"begin": 1359,
											"end": 1370,
											"name": "SWAP1"
										},
										{
											"begin": 1359,
											"end": 1370,
											"name": "DIV"
										},
										{
											"begin": 1359,
											"end": 1370,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1359,
											"end": 1370,
											"name": "AND"
										},
										{
											"begin": 1359,
											"end": 1386,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1359,
											"end": 1386,
											"name": "AND"
										},
										{
											"begin": 1359,
											"end": 1386,
											"name": "EQ"
										},
										{
											"begin": 1359,
											"end": 1386,
											"name": "ISZERO"
										},
										{
											"begin": 1332,
											"end": 1386,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1332,
											"end": 1386,
											"name": "JUMPDEST"
										},
										{
											"begin": 1327,
											"end": 1518,
											"name": "ISZERO"
										},
										{
											"begin": 1327,
											"end": 1518,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1327,
											"end": 1518,
											"name": "JUMPI"
										},
										{
											"begin": 1416,
											"end": 1426,
											"name": "CALLER"
										},
										{
											"begin": 1403,
											"end": 1410,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 1410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "EXP"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "DUP2"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "SLOAD"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "DUP2"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "MUL"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "NOT"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "AND"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "DUP4"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "AND"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "MUL"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "OR"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "SSTORE"
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "POP"
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "CALLVALUE"
										},
										{
											"begin": 1440,
											"end": 1450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1462,
											"name": "DUP2"
										},
										{
											"begin": 1440,
											"end": 1462,
											"name": "SWAP1"
										},
										{
											"begin": 1440,
											"end": 1462,
											"name": "SSTORE"
										},
										{
											"begin": 1440,
											"end": 1462,
											"name": "POP"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "CALLVALUE"
										},
										{
											"begin": 1476,
											"end": 1488,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "DUP2"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "SWAP1"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "SSTORE"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "POP"
										},
										{
											"begin": 1327,
											"end": 1518,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1327,
											"end": 1518,
											"name": "JUMPDEST"
										},
										{
											"begin": 1194,
											"end": 1518,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1194,
											"end": 1518,
											"name": "JUMPDEST"
										},
										{
											"begin": 1110,
											"end": 1542,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "JUMPDEST"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "SLOAD"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "DUP2"
										},
										{
											"begin": 171,
											"end": 193,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "JUMPDEST"
										},
										{
											"begin": 86,
											"end": 91,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "DUP2"
										},
										{
											"begin": 48,
											"end": 91,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "JUMPDEST"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "SLOAD"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "DUP2"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "JUMPDEST"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "SLOAD"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "DUP2"
										},
										{
											"begin": 402,
											"end": 430,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "JUMPDEST"
										},
										{
											"begin": 4283,
											"end": 4284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4280,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4273,
											"end": 4280,
											"name": "SLOAD"
										},
										{
											"begin": 4273,
											"end": 4284,
											"name": "GT"
										},
										{
											"begin": 4265,
											"end": 4285,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4265,
											"end": 4285,
											"name": "JUMPI"
										},
										{
											"begin": 4265,
											"end": 4285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4285,
											"name": "DUP1"
										},
										{
											"begin": 4265,
											"end": 4285,
											"name": "REVERT"
										},
										{
											"begin": 4265,
											"end": 4285,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 4265,
											"end": 4285,
											"name": "JUMPDEST"
										},
										{
											"begin": 4386,
											"end": 4387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "DUP1"
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "DUP2"
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "SWAP1"
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "SSTORE"
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "POP"
										},
										{
											"begin": 4423,
											"end": 4426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4404,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4397,
											"end": 4404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "EXP"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "DUP2"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "SLOAD"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "DUP2"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "MUL"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "NOT"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "AND"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "SWAP1"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "DUP4"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "AND"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "MUL"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "OR"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "SWAP1"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "SSTORE"
										},
										{
											"begin": 4397,
											"end": 4427,
											"name": "POP"
										},
										{
											"begin": 4463,
											"end": 4466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4448,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4437,
											"end": 4448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "EXP"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "DUP2"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "SLOAD"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "DUP2"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "MUL"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "NOT"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "AND"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "SWAP1"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "DUP4"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "AND"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "MUL"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "OR"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "SWAP1"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "SSTORE"
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "POP"
										},
										{
											"begin": 4495,
											"end": 4496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4477,
											"end": 4496,
											"name": "DUP2"
										},
										{
											"begin": 4477,
											"end": 4496,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4496,
											"name": "SSTORE"
										},
										{
											"begin": 4477,
											"end": 4496,
											"name": "POP"
										},
										{
											"begin": 4524,
											"end": 4525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4510,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4506,
											"end": 4525,
											"name": "DUP2"
										},
										{
											"begin": 4506,
											"end": 4525,
											"name": "SWAP1"
										},
										{
											"begin": 4506,
											"end": 4525,
											"name": "SSTORE"
										},
										{
											"begin": 4506,
											"end": 4525,
											"name": "POP"
										},
										{
											"begin": 4308,
											"end": 4532,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "JUMPDEST"
										},
										{
											"begin": 3954,
											"end": 3958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 3998,
											"name": "SELFBALANCE"
										},
										{
											"begin": 3970,
											"end": 3998,
											"name": "SWAP1"
										},
										{
											"begin": 3970,
											"end": 3998,
											"name": "POP"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "SWAP1"
										},
										{
											"begin": 3903,
											"end": 4005,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "JUMPDEST"
										},
										{
											"begin": 2417,
											"end": 2421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2337,
											"name": "DUP1"
										},
										{
											"begin": 2321,
											"end": 2333,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2321,
											"end": 2333,
											"name": "SLOAD"
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "GT"
										},
										{
											"begin": 2313,
											"end": 2338,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2313,
											"end": 2338,
											"name": "JUMPI"
										},
										{
											"begin": 2313,
											"end": 2338,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2338,
											"name": "DUP1"
										},
										{
											"begin": 2313,
											"end": 2338,
											"name": "REVERT"
										},
										{
											"begin": 2313,
											"end": 2338,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2313,
											"end": 2338,
											"name": "JUMPDEST"
										},
										{
											"begin": 2493,
											"end": 2499,
											"name": "PUSH",
											"value": "F423F"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2474,
											"end": 2486,
											"name": "NUMBER"
										},
										{
											"begin": 2474,
											"end": 2488,
											"name": "SUB"
										},
										{
											"begin": 2464,
											"end": 2489,
											"name": "BLOCKHASH"
										},
										{
											"begin": 2459,
											"end": 2490,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2490,
											"name": "SHR"
										},
										{
											"begin": 2459,
											"end": 2499,
											"name": "DUP2"
										},
										{
											"begin": 2459,
											"end": 2499,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2459,
											"end": 2499,
											"name": "JUMPI"
										},
										{
											"begin": 2459,
											"end": 2499,
											"name": "INVALID"
										},
										{
											"begin": 2459,
											"end": 2499,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2459,
											"end": 2499,
											"name": "JUMPDEST"
										},
										{
											"begin": 2459,
											"end": 2499,
											"name": "MOD"
										},
										{
											"begin": 2447,
											"end": 2456,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "DUP2"
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "SWAP1"
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "SSTORE"
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "POP"
										},
										{
											"begin": 2539,
											"end": 2540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2535,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2522,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 2522,
											"end": 2531,
											"name": "SLOAD"
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "DUP2"
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "JUMPI"
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "INVALID"
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "JUMPDEST"
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "MOD"
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "EQ"
										},
										{
											"begin": 2518,
											"end": 2775,
											"name": "ISZERO"
										},
										{
											"begin": 2518,
											"end": 2775,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2518,
											"end": 2775,
											"name": "JUMPI"
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2569,
											"end": 2580,
											"name": "DUP2"
										},
										{
											"begin": 2569,
											"end": 2580,
											"name": "SWAP1"
										},
										{
											"begin": 2569,
											"end": 2580,
											"name": "SSTORE"
										},
										{
											"begin": 2569,
											"end": 2580,
											"name": "POP"
										},
										{
											"begin": 2614,
											"end": 2615,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2610,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2598,
											"end": 2610,
											"name": "SLOAD"
										},
										{
											"begin": 2598,
											"end": 2615,
											"name": "EQ"
										},
										{
											"begin": 2594,
											"end": 2765,
											"name": "ISZERO"
										},
										{
											"begin": 2594,
											"end": 2765,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2594,
											"end": 2765,
											"name": "JUMPI"
										},
										{
											"begin": 2642,
											"end": 2643,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2635,
											"end": 2639,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2635,
											"end": 2643,
											"name": "DUP2"
										},
										{
											"begin": 2635,
											"end": 2643,
											"name": "SWAP1"
										},
										{
											"begin": 2635,
											"end": 2643,
											"name": "SSTORE"
										},
										{
											"begin": 2635,
											"end": 2643,
											"name": "POP"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "SWAP1"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "SLOAD"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "SWAP1"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "EXP"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "SWAP1"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "DIV"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "AND"
										},
										{
											"begin": 2673,
											"end": 2689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2689,
											"name": "AND"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 2690,
											"end": 2711,
											"name": "SELFBALANCE"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "SWAP1"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "DUP2"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "ISZERO"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "MUL"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "SWAP1"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "MLOAD"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "MLOAD"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "DUP1"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "DUP4"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "SUB"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "DUP2"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "DUP6"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "DUP9"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "DUP9"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "CALL"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "SWAP4"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "POP"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "POP"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "POP"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "POP"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2673,
											"end": 2712,
											"name": "POP"
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2730,
											"end": 2735,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "JUMPDEST"
										},
										{
											"begin": 2594,
											"end": 2765,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2594,
											"end": 2765,
											"name": "JUMPDEST"
										},
										{
											"begin": 2518,
											"end": 2775,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2518,
											"end": 2775,
											"name": "JUMPDEST"
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2800,
											"end": 2801,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2788,
											"end": 2797,
											"name": "DUP1"
										},
										{
											"begin": 2788,
											"end": 2797,
											"name": "SLOAD"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "DUP2"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "JUMPI"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "INVALID"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "JUMPDEST"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "MOD"
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "EQ"
										},
										{
											"begin": 2784,
											"end": 3100,
											"name": "ISZERO"
										},
										{
											"begin": 2784,
											"end": 3100,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2784,
											"end": 3100,
											"name": "JUMPI"
										},
										{
											"begin": 2832,
											"end": 2833,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2822,
											"end": 2829,
											"name": "DUP1"
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "DUP2"
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "SWAP1"
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "SSTORE"
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "POP"
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2851,
											"end": 2863,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2851,
											"end": 2863,
											"name": "SLOAD"
										},
										{
											"begin": 2851,
											"end": 2868,
											"name": "EQ"
										},
										{
											"begin": 2847,
											"end": 3090,
											"name": "ISZERO"
										},
										{
											"begin": 2847,
											"end": 3090,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2847,
											"end": 3090,
											"name": "JUMPI"
										},
										{
											"begin": 2895,
											"end": 2896,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2888,
											"end": 2892,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2888,
											"end": 2896,
											"name": "DUP2"
										},
										{
											"begin": 2888,
											"end": 2896,
											"name": "SWAP1"
										},
										{
											"begin": 2888,
											"end": 2896,
											"name": "SSTORE"
										},
										{
											"begin": 2888,
											"end": 2896,
											"name": "POP"
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "SWAP1"
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "SLOAD"
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "SWAP1"
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "EXP"
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "SWAP1"
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "DIV"
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "AND"
										},
										{
											"begin": 2998,
											"end": 3014,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2998,
											"end": 3014,
											"name": "AND"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 3015,
											"end": 3036,
											"name": "SELFBALANCE"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "SWAP1"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "DUP2"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "ISZERO"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "MUL"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "SWAP1"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "MLOAD"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "MLOAD"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "DUP1"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "DUP4"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "SUB"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "DUP2"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "DUP6"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "DUP9"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "DUP9"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "CALL"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "SWAP4"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "POP"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "POP"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "POP"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "POP"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 3055,
											"end": 3060,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "JUMPDEST"
										},
										{
											"begin": 2847,
											"end": 3090,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2847,
											"end": 3090,
											"name": "JUMPDEST"
										},
										{
											"begin": 2784,
											"end": 3100,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2784,
											"end": 3100,
											"name": "JUMPDEST"
										},
										{
											"begin": 3134,
											"end": 3135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3130,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3126,
											"end": 3130,
											"name": "SLOAD"
										},
										{
											"begin": 3126,
											"end": 3135,
											"name": "EQ"
										},
										{
											"begin": 3122,
											"end": 3331,
											"name": "ISZERO"
										},
										{
											"begin": 3122,
											"end": 3331,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 3122,
											"end": 3331,
											"name": "JUMPI"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "SWAP1"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "SLOAD"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "SWAP1"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "EXP"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "SWAP1"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "DIV"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "AND"
										},
										{
											"begin": 3244,
											"end": 3264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3264,
											"name": "AND"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 3265,
											"end": 3286,
											"name": "SELFBALANCE"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "SWAP1"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "DUP2"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "ISZERO"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "MUL"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "SWAP1"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "MLOAD"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "MLOAD"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "DUP1"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "DUP4"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "SUB"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "DUP2"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "DUP6"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "DUP9"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "DUP9"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "CALL"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "SWAP4"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3244,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3301,
											"end": 3308,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3301,
											"end": 3306,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3301,
											"end": 3308,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3301,
											"end": 3308,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 3301,
											"end": 3308,
											"name": "JUMPDEST"
										},
										{
											"begin": 3122,
											"end": 3331,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 3122,
											"end": 3331,
											"name": "JUMPDEST"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "SWAP1"
										},
										{
											"begin": 2361,
											"end": 3346,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "SLOAD"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "DUP2"
										},
										{
											"begin": 334,
											"end": 362,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "SLOAD"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "JUMPDEST"
										},
										{
											"begin": 157,
											"end": 165,
											"name": "PUSH",
											"value": "8AC7230489E80000"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "DUP2"
										},
										{
											"begin": 119,
											"end": 165,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "JUMPDEST"
										},
										{
											"begin": 4075,
											"end": 4079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "SLOAD"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "EXP"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "DIV"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "AND"
										},
										{
											"begin": 4095,
											"end": 4116,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4095,
											"end": 4116,
											"name": "AND"
										},
										{
											"begin": 4095,
											"end": 4105,
											"name": "CALLER"
										},
										{
											"begin": 4095,
											"end": 4116,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4095,
											"end": 4116,
											"name": "AND"
										},
										{
											"begin": 4095,
											"end": 4116,
											"name": "EQ"
										},
										{
											"begin": 4091,
											"end": 4151,
											"name": "ISZERO"
										},
										{
											"begin": 4091,
											"end": 4151,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 4091,
											"end": 4151,
											"name": "JUMPI"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4132,
											"end": 4140,
											"name": "SWAP1"
										},
										{
											"begin": 4132,
											"end": 4140,
											"name": "POP"
										},
										{
											"begin": 4132,
											"end": 4140,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 4132,
											"end": 4140,
											"name": "JUMP"
										},
										{
											"begin": 4091,
											"end": 4151,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 4091,
											"end": 4151,
											"name": "JUMPDEST"
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "SWAP1"
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "SLOAD"
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "SWAP1"
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "EXP"
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "SWAP1"
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "DIV"
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "AND"
										},
										{
											"begin": 4156,
											"end": 4181,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4156,
											"end": 4181,
											"name": "AND"
										},
										{
											"begin": 4156,
											"end": 4166,
											"name": "CALLER"
										},
										{
											"begin": 4156,
											"end": 4181,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4156,
											"end": 4181,
											"name": "AND"
										},
										{
											"begin": 4156,
											"end": 4181,
											"name": "EQ"
										},
										{
											"begin": 4152,
											"end": 4216,
											"name": "ISZERO"
										},
										{
											"begin": 4152,
											"end": 4216,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 4152,
											"end": 4216,
											"name": "JUMPI"
										},
										{
											"begin": 4204,
											"end": 4205,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4205,
											"name": "SWAP1"
										},
										{
											"begin": 4197,
											"end": 4205,
											"name": "POP"
										},
										{
											"begin": 4197,
											"end": 4205,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 4197,
											"end": 4205,
											"name": "JUMP"
										},
										{
											"begin": 4152,
											"end": 4216,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 4152,
											"end": 4216,
											"name": "JUMPDEST"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "JUMPDEST"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "SWAP1"
										},
										{
											"begin": 4036,
											"end": 4222,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "JUMPDEST"
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2082,
											"end": 2094,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2082,
											"end": 2094,
											"name": "SLOAD"
										},
										{
											"begin": 2082,
											"end": 2098,
											"name": "LT"
										},
										{
											"begin": 2074,
											"end": 2099,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2074,
											"end": 2099,
											"name": "JUMPI"
										},
										{
											"begin": 2074,
											"end": 2099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2099,
											"name": "DUP1"
										},
										{
											"begin": 2074,
											"end": 2099,
											"name": "REVERT"
										},
										{
											"begin": 2074,
											"end": 2099,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2074,
											"end": 2099,
											"name": "JUMPDEST"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "SWAP1"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "SLOAD"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "SWAP1"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "EXP"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "SWAP1"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "DIV"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "AND"
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "AND"
										},
										{
											"begin": 1855,
											"end": 1865,
											"name": "CALLER"
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "AND"
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "EQ"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "JUMPI"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "DUP1"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "REVERT"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 1847,
											"end": 1877,
											"name": "JUMPDEST"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 1973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "DUP2"
										},
										{
											"begin": 1963,
											"end": 1973,
											"name": "GT"
										},
										{
											"begin": 1955,
											"end": 1974,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 1955,
											"end": 1974,
											"name": "JUMPI"
										},
										{
											"begin": 1955,
											"end": 1974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1974,
											"name": "DUP1"
										},
										{
											"begin": 1955,
											"end": 1974,
											"name": "REVERT"
										},
										{
											"begin": 1955,
											"end": 1974,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 1955,
											"end": 1974,
											"name": "JUMPDEST"
										},
										{
											"begin": 2001,
											"end": 2002,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1992,
											"end": 1998,
											"name": "DUP2"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "LT"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "JUMPI"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "DUP1"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "REVERT"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "JUMPDEST"
										},
										{
											"begin": 2249,
											"end": 2255,
											"name": "DUP2"
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2234,
											"end": 2255,
											"name": "DUP2"
										},
										{
											"begin": 2234,
											"end": 2255,
											"name": "SWAP1"
										},
										{
											"begin": 2234,
											"end": 2255,
											"name": "SSTORE"
										},
										{
											"begin": 2234,
											"end": 2255,
											"name": "POP"
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "POP"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "POP"
										},
										{
											"begin": 2122,
											"end": 2262,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "SLOAD"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 274,
											"end": 295,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "SLOAD"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "DUP2"
										},
										{
											"begin": 301,
											"end": 328,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3379,
											"end": 3624,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 3379,
											"end": 3624,
											"name": "JUMPDEST"
										},
										{
											"begin": 3441,
											"end": 3442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3433,
											"name": "DUP1"
										},
										{
											"begin": 3423,
											"end": 3442,
											"name": "DUP2"
										},
										{
											"begin": 3423,
											"end": 3442,
											"name": "SWAP1"
										},
										{
											"begin": 3423,
											"end": 3442,
											"name": "SSTORE"
										},
										{
											"begin": 3423,
											"end": 3442,
											"name": "POP"
										},
										{
											"begin": 3478,
											"end": 3481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3459,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3452,
											"end": 3459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "EXP"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "SLOAD"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "MUL"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "NOT"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "AND"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "SWAP1"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "DUP4"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "AND"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "MUL"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "OR"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "SWAP1"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "SSTORE"
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3518,
											"end": 3521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "EXP"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "DUP2"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "SLOAD"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "DUP2"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "MUL"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "NOT"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "AND"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "SWAP1"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "DUP4"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "AND"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "MUL"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "OR"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "SWAP1"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "SSTORE"
										},
										{
											"begin": 3492,
											"end": 3522,
											"name": "POP"
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3543,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "DUP2"
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "SWAP1"
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "SSTORE"
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "POP"
										},
										{
											"begin": 3579,
											"end": 3580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3573,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3561,
											"end": 3580,
											"name": "DUP2"
										},
										{
											"begin": 3561,
											"end": 3580,
											"name": "SWAP1"
										},
										{
											"begin": 3561,
											"end": 3580,
											"name": "SSTORE"
										},
										{
											"begin": 3561,
											"end": 3580,
											"name": "POP"
										},
										{
											"begin": 3608,
											"end": 3609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3590,
											"end": 3602,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "DUP2"
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "SWAP1"
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "SSTORE"
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3624,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BET_MAX()": "d0017a0c",
							"BET_MIN()": "2626ab08",
							"getContractBalance()": "6f9fb98a",
							"getOutcome()": "7e7e4b47",
							"housePlayed()": "fc98f42e",
							"initialBet()": "1d73c64c",
							"outcome()": "27793f87",
							"paid()": "295b4e17",
							"playerChoice()": "adef7cdd",
							"playerChooses(uint256)": "e92788d6",
							"playerPlayed()": "8e687aed",
							"randomNum()": "f630aa65",
							"register()": "1aa3a008",
							"reset_contract()": "4e22fb5b",
							"whoAmI()": "da91254c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"BET_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BET_MIN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getOutcome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"housePlayed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outcome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"playerChoice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"choice\",\"type\":\"uint256\"}],\"name\":\"playerChooses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"playerPlayed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reset_contract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whoAmI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"getContractBalance()\":{\"notice\":\"***********************************************************************\"}}}},\"settings\":{\"compilationTarget\":{\"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":\"CoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol\":{\"keccak256\":\"0xb91d9ae8bd0246d431edf1abbc44b695b3fd7df5aea2c1a752174e23539da9ff\",\"urls\":[\"bzz-raw://dd84e7466fbc4e425266000760b5638c7f132dbe553914ab4bac97963d20de3f\",\"dweb:/ipfs/QmZ9a2YQkZuPncaAc1DUFiax62BSr3cvxGv8A2hVAsqHTM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol:CoinFlip",
								"label": "initialBet",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 11,
								"contract": "Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol:CoinFlip",
								"label": "outcome",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 13,
								"contract": "Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol:CoinFlip",
								"label": "randomNum",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 16,
								"contract": "Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol:CoinFlip",
								"label": "housePlayed",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 19,
								"contract": "Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol:CoinFlip",
								"label": "playerPlayed",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 22,
								"contract": "Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol:CoinFlip",
								"label": "playerChoice",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol:CoinFlip",
								"label": "paid",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol:CoinFlip",
								"label": "playerA",
								"offset": 0,
								"slot": "7",
								"type": "t_address_payable"
							},
							{
								"astId": 29,
								"contract": "Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol:CoinFlip",
								"label": "HouseWallet",
								"offset": 0,
								"slot": "8",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"getContractBalance()": {
								"notice": "***********************************************************************"
							}
						}
					}
				}
			}
		},
		"sources": {
			"Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol": {
				"ast": {
					"absolutePath": "Group Projects/Group_Project_3_Coinflip_BlackJack/Coinflip game/test_game.sol",
					"exportedSymbols": {
						"CoinFlip": [
							396
						]
					},
					"id": 397,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396
							],
							"name": "CoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"name": "BET_MIN",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "48:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "48:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "86:5:0",
										"subdenomination": "wei",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 7,
									"name": "BET_MAX",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "119:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "119:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "157:8:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"name": "initialBet",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "171:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "171:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"name": "outcome",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "249:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "249:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "randomNum",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "274:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "274:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 16,
									"name": "housePlayed",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "301:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "301:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "327:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "playerPlayed",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "334:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "334:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "361:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "playerChoice",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "368:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "368:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "395:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 25,
									"name": "paid",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "402:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 23,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "402:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 24,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "429:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"name": "playerA",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "462:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "462:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"name": "HouseWallet",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "491:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 28,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "491:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "844:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 32,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "862:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "862:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 34,
																"name": "BET_MIN",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "875:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "862:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "854:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "854:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 39,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "901:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "901:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "BET_MAX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "901:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "893:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "893:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "893:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 46,
																	"name": "initialBet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "940:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "954:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "940:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 49,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "959:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "959:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 51,
																	"name": "initialBet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "972:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "959:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "940:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "932:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "932:51:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "993:1:0"
											}
										]
									},
									"documentation": "***********************************************************************",
									"id": 58,
									"name": "validBet",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:2:0"
									},
									"src": "824:177:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "1038:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 61,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1056:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1056:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "playerA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1070:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1056:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 60,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "1048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1048:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1048:30:0"
											},
											{
												"id": 67,
												"nodeType": "PlaceholderStatement",
												"src": "1097:1:0"
											}
										]
									},
									"documentation": null,
									"id": 69,
									"name": "notAlreadyRegistered",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:2:0"
									},
									"src": "1006:99:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "1175:367:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 76,
														"name": "HouseWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1198:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1213:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1213:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1198:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 92,
																"name": "playerA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1332:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307830",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1351:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1343:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1343:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1332:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 97,
																"name": "HouseWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1359:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307830",
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1382:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1374:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1374:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1359:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1332:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 119,
													"nodeType": "IfStatement",
													"src": "1327:191:0",
													"trueBody": {
														"id": 118,
														"nodeType": "Block",
														"src": "1389:129:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 103,
																		"name": "playerA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1403:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 104,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "1416:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1416:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"src": "1403:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 107,
																"nodeType": "ExpressionStatement",
																"src": "1403:23:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 108,
																		"name": "initialBet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "1440:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 109,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "1453:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1453:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1440:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 112,
																"nodeType": "ExpressionStatement",
																"src": "1440:22:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 113,
																		"name": "playerPlayed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "1476:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 114,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "1491:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1491:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1476:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 117,
																"nodeType": "ExpressionStatement",
																"src": "1476:24:0"
															}
														]
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "1194:324:0",
												"trueBody": {
													"id": 91,
													"nodeType": "Block",
													"src": "1227:86:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 81,
																	"name": "HouseWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1241:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 82,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "1255:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1255:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "1241:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 85,
															"nodeType": "ExpressionStatement",
															"src": "1241:24:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 86,
																	"name": "housePlayed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "1279:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 87,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "1293:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1293:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1279:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 90,
															"nodeType": "ExpressionStatement",
															"src": "1279:23:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 72,
											"modifierName": {
												"argumentTypes": null,
												"id": 71,
												"name": "validBet",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1145:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1145:8:0"
										},
										{
											"arguments": null,
											"id": 74,
											"modifierName": {
												"argumentTypes": null,
												"id": 73,
												"name": "notAlreadyRegistered",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 69,
												"src": "1154:20:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1154:20:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:0:0"
									},
									"scope": 396,
									"src": "1110:432:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "1828:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 125,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1855:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1855:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 127,
																"name": "playerA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1855:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "1847:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1847:30:0"
											},
											{
												"id": 131,
												"nodeType": "PlaceholderStatement",
												"src": "1887:1:0"
											}
										]
									},
									"documentation": "***********************************************************************",
									"id": 133,
									"name": "is_caller_player",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:2:0"
									},
									"src": "1800:95:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "1936:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 138,
																"name": "choice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "1963:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1972:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1963:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "1955:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1955:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1955:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 144,
																"name": "choice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "1992:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "33",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2001:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "1992:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "1984:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1984:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "1984:19:0"
											},
											{
												"id": 149,
												"nodeType": "PlaceholderStatement",
												"src": "2013:1:0"
											}
										]
									},
									"documentation": null,
									"id": 151,
									"name": "is_legal_play",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"name": "choice",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1923:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1923:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1922:13:0"
									},
									"src": "1900:121:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "2055:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 154,
																"name": "playerChoice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2082:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2097:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2082:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "2074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "2074:25:0"
											},
											{
												"id": 159,
												"nodeType": "PlaceholderStatement",
												"src": "2109:1:0"
											}
										]
									},
									"documentation": null,
									"id": 161,
									"name": "player_never_played",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2055:0:0"
									},
									"src": "2026:91:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "2224:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 173,
														"name": "playerChoice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2234:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 174,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2249:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2234:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2234:21:0"
											}
										]
									},
									"documentation": null,
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 166,
											"modifierName": {
												"argumentTypes": null,
												"id": 165,
												"name": "player_never_played",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 161,
												"src": "2165:19:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2165:19:0"
										},
										{
											"arguments": null,
											"id": 168,
											"modifierName": {
												"argumentTypes": null,
												"id": 167,
												"name": "is_caller_player",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 133,
												"src": "2185:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2185:16:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 170,
													"name": "choice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 163,
													"src": "2216:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 171,
											"modifierName": {
												"argumentTypes": null,
												"id": 169,
												"name": "is_legal_play",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 151,
												"src": "2202:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2202:21:0"
										}
									],
									"name": "playerChooses",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "choice",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "2145:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2145:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2144:13:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2224:0:0"
									},
									"scope": 396,
									"src": "2122:140:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "2294:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 181,
																"name": "playerChoice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2321:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2336:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2321:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "2313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2313:25:0"
											},
											{
												"id": 186,
												"nodeType": "PlaceholderStatement",
												"src": "2348:1:0"
											}
										]
									},
									"documentation": null,
									"id": 188,
									"name": "has_player_played",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2294:0:0"
									},
									"src": "2267:89:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2423:923:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 195,
														"name": "randomNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2447:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 198,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 401,
																					"src": "2474:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "number",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2474:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2487:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2474:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 197,
																		"name": "blockhash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2464:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (uint256) view returns (bytes32)"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2464:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2459:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2459:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "393939393939",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2493:6:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_999999_by_1",
																"typeString": "int_const 999999"
															},
															"value": "999999"
														},
														"src": "2459:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2447:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2447:52:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 208,
															"name": "randomNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "2522:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2522:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2539:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2522:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 239,
												"nodeType": "IfStatement",
												"src": "2518:257:0",
												"trueBody": {
													"id": 238,
													"nodeType": "Block",
													"src": "2542:233:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 213,
																	"name": "outcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2569:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2579:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2569:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 216,
															"nodeType": "ExpressionStatement",
															"src": "2569:11:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 217,
																	"name": "playerChoice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "2598:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2614:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2598:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 237,
															"nodeType": "IfStatement",
															"src": "2594:171:0",
															"trueBody": {
																"id": 236,
																"nodeType": "Block",
																"src": "2617:148:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 220,
																				"name": "paid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 25,
																				"src": "2635:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2642:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2635:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 223,
																		"nodeType": "ExpressionStatement",
																		"src": "2635:8:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 228,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 425,
																								"src": "2698:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_CoinFlip_$396",
																									"typeString": "contract CoinFlip"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_CoinFlip_$396",
																									"typeString": "contract CoinFlip"
																								}
																							],
																							"id": 227,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2690:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": "address"
																						},
																						"id": 229,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2690:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 230,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "2690:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 224,
																					"name": "playerA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 27,
																					"src": "2673:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2673:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2673:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 232,
																		"nodeType": "ExpressionStatement",
																		"src": "2673:39:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 233,
																				"name": "reset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 322,
																				"src": "2730:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2730:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 235,
																		"nodeType": "ExpressionStatement",
																		"src": "2730:7:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 240,
															"name": "randomNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "2788:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2800:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2788:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2805:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2788:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 271,
												"nodeType": "IfStatement",
												"src": "2784:316:0",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "2808:292:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 245,
																	"name": "outcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2822:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2832:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2822:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 248,
															"nodeType": "ExpressionStatement",
															"src": "2822:11:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 249,
																	"name": "playerChoice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "2851:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2867:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2851:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 269,
															"nodeType": "IfStatement",
															"src": "2847:243:0",
															"trueBody": {
																"id": 268,
																"nodeType": "Block",
																"src": "2870:220:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 252,
																				"name": "paid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 25,
																				"src": "2888:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2895:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2888:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 255,
																		"nodeType": "ExpressionStatement",
																		"src": "2888:8:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 260,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 425,
																								"src": "3023:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_CoinFlip_$396",
																									"typeString": "contract CoinFlip"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_CoinFlip_$396",
																									"typeString": "contract CoinFlip"
																								}
																							],
																							"id": 259,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3015:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": "address"
																						},
																						"id": 261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3015:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "3015:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 256,
																					"name": "playerA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 27,
																					"src": "2998:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2998:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2998:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 264,
																		"nodeType": "ExpressionStatement",
																		"src": "2998:39:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 265,
																				"name": "reset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 322,
																				"src": "3055:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3055:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 267,
																		"nodeType": "ExpressionStatement",
																		"src": "3055:7:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 272,
														"name": "paid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3126:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3134:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3126:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 288,
												"nodeType": "IfStatement",
												"src": "3122:209:0",
												"trueBody": {
													"id": 287,
													"nodeType": "Block",
													"src": "3137:194:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 279,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 425,
																					"src": "3273:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_CoinFlip_$396",
																						"typeString": "contract CoinFlip"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_CoinFlip_$396",
																						"typeString": "contract CoinFlip"
																					}
																				],
																				"id": 278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3265:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3265:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3265:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 275,
																		"name": "HouseWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "3244:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3244:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3244:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "ExpressionStatement",
															"src": "3244:43:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 284,
																	"name": "reset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "3301:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3301:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "ExpressionStatement",
															"src": "3301:7:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 191,
											"modifierName": {
												"argumentTypes": null,
												"id": 190,
												"name": "has_player_played",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 188,
												"src": "2390:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2390:17:0"
										}
									],
									"name": "getOutcome",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2417:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2417:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2416:6:0"
									},
									"scope": 396,
									"src": "2361:985:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "3404:220:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 293,
														"name": "initialBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "3423:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3441:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3423:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "3423:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 297,
														"name": "playerA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3452:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3478:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3470:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3452:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3452:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 303,
														"name": "HouseWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "3492:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3518:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3510:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3510:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3492:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "3492:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 309,
														"name": "housePlayed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "3532:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3550:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3532:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "3532:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 313,
														"name": "playerPlayed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "3561:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3579:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3561:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "3561:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "playerChoice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "3590:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3608:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3590:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "3590:19:0"
											}
										]
									},
									"documentation": null,
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3393:2:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:0:0"
									},
									"scope": 396,
									"src": "3379:245:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "3960:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 328,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "3985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CoinFlip_$396",
																	"typeString": "contract CoinFlip"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_CoinFlip_$396",
																	"typeString": "contract CoinFlip"
																}
															],
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3977:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3977:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 326,
												"id": 331,
												"nodeType": "Return",
												"src": "3970:28:0"
											}
										]
									},
									"documentation": "***********************************************************************",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3930:2:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3954:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3954:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3953:6:0"
									},
									"scope": 396,
									"src": "3903:102:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "4081:141:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 338,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4095:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4095:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 340,
														"name": "playerA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "4109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4095:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 345,
												"nodeType": "IfStatement",
												"src": "4091:60:0",
												"trueBody": {
													"id": 344,
													"nodeType": "Block",
													"src": "4118:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4139:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 337,
															"id": 343,
															"nodeType": "Return",
															"src": "4132:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 346,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4156:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4156:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 348,
														"name": "HouseWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4170:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4156:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 353,
												"nodeType": "IfStatement",
												"src": "4152:64:0",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "4183:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4204:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 337,
															"id": 351,
															"nodeType": "Return",
															"src": "4197:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "whoAmI",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4051:2:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "4075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4074:6:0"
									},
									"scope": 396,
									"src": "4036:186:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "4255:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 358,
																"name": "outcome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "4273:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4283:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4273:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															415
														],
														"referencedDeclaration": 414,
														"src": "4265:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4265:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "4265:20:0"
											},
											{
												"id": 363,
												"nodeType": "PlaceholderStatement",
												"src": "4295:1:0"
											}
										]
									},
									"documentation": null,
									"id": 365,
									"name": "game_has_outcome",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4252:2:0"
									},
									"src": "4227:76:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "4358:174:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 370,
														"name": "initialBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "4368:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4386:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4368:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "4368:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 374,
														"name": "playerA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "4397:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4423:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4415:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4415:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4397:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "4397:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 380,
														"name": "HouseWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4437:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4463:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4455:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4455:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4437:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "4437:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 386,
														"name": "outcome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4477:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4495:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4477:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "4477:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 390,
														"name": "paid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "4506:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4524:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4506:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "4506:19:0"
											}
										]
									},
									"documentation": null,
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 368,
											"modifierName": {
												"argumentTypes": null,
												"id": 367,
												"name": "game_has_outcome",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 365,
												"src": "4341:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4341:16:0"
										}
									],
									"name": "reset_contract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4331:2:0"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4358:0:0"
									},
									"scope": 396,
									"src": "4308:224:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 397,
							"src": "24:4510:0"
						}
					],
					"src": "0:4535:0"
				},
				"id": 0
			}
		}
	}
}